<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://www.sketch.com/blog/feed.xml</id>
  <title>Sketch Blog</title>
  <subtitle>Updates, articles and insights from the Sketch team.</subtitle>
  <link href="https://www.sketch.com/blog/feed.xml" rel="self" />
  <link href="https://www.sketch.com" rel="alternate" />
  <icon>https://www.sketch.com/images/components/icons/app-icon@2x.png</icon>
  <updated>2021-01-30T09:26:18+00:00</updated>
  <rights>© 2021 Sketch B.V.</rights>
  <author>
    <name>Sketch Team</name>
    <email>mail@sketch.com</email>
    <uri>https://www.sketch.com</uri>
  </author>
  
  <entry>
    <id>https://www.sketch.com/blog/2021/01/27/objective-c-how-brad-coxs-programming-language-shaped-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2021/01/27/objective-c-how-brad-coxs-programming-language-shaped-sketch/"/>
    <title>Objective-C: How Brad Cox’s programming language has shaped Sketch since day one</title>
    <summary>After the passing of Objective-C’s creator, we reflect on how instrumental it has been for our company and our industry</summary><published>2021-01-27T16:23:43+00:00</published>
    <updated>2021-01-27T16:23:43+00:00</updated>
    
<author>
      <name>Pieter Omvlee</name>
    </author>
    <content type="html">
      &lt;p&gt;We often use this blog to talk about new Sketch features, or pull back the curtain on how we work here — such as &lt;a href=&quot;/blog/2020/12/02/how-we-redesigned-the-sketch-icon-for-big-sur/&quot;&gt;exploring our creative process&lt;/a&gt;, or looking into &lt;a href=&quot;https://deploy-preview-1648--sketchapp.netlify.app/blog/2020/11/24/how-sketch-performs-on-apple-m1-silicon/&quot;&gt;how we optimize the Mac app&lt;/a&gt;. But one thing I don’t think we’ve ever really talked about is our programming language.&lt;/p&gt;

&lt;p&gt;Today, though, as we reflect on the recent passing of Objective-C’s co-creator Dr Brad Cox Ph.D., we have a good reason to do just that.&lt;/p&gt;

&lt;p&gt;Objective-C was first adopted by NeXT, and later became the foundation of Mac OS X (now known as macOS). It was the best way to write Mac apps — and for the first eight years or so of Sketch, we wrote almost all the app’s code with it. Most of that code is still there.&lt;/p&gt;

&lt;p&gt;A programming language really forms the lowest building blocks of an app, and shapes how developers interact with the machine. It has a foundational impact on what’s possible, and therefore directly affects the final product — far more than an end-user could ever know.&lt;/p&gt;

&lt;p&gt;Dr Cox and his business partner, Tom Love, built Objective-C on top of the old industry foundation of C, and the result was a powerful and very dynamic language. Its infamous quirk — the ‘weird’ square-bracket syntax it used for its functions — puzzled many an early developer. But once you got past that, you got the high speed and low memory footprint of regular C code, with a thin but flexible Object-Oriented layer on top.&lt;/p&gt;

&lt;p&gt;It was certainly a big step up from Java and Swing, which I learnt at University. I would simply describe it as ‘elegant’ — something I’d never say of those two languages. Despite the Mac’s small market share at the time, that elegance got me hooked. I was instilled with a desire to create apps that were like Apple’s — and like those made by the other indies out there that I respected tremendously.&lt;/p&gt;

&lt;p&gt;The influence of Objective-C can hardly be understated. I think it’s fair to say that there would’ve been no iPhone without Objective-C. It’s certainly true that AppKit — NeXT’s and later Apple’s original UI framework — was built for Objective-C. The language and the frameworks were beautiful, and a joy to work with. They’re a bit long in the tooth now, but they’re still going strong more than 30 years on, and that is in no small part thanks to the language they were all built on. That’s one hell of a legacy to leave behind, and we at Sketch are eternally grateful for it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;If you want to read more about Objective-C’s origins, check out &lt;a href=&quot;https://www.google.co.uk/books/edition/Masterminds_of_Programming/bIxWAgAAQBAJ?hl=en&amp;amp;gbpv=1&quot;&gt;Masterminds of Programming&lt;/a&gt; by Federico Biancuzzi, or take some time to read &lt;a href=&quot;https://daringfireball.net/2021/01/mueller_cox_objc&quot;&gt;John Gruber’s recent musings&lt;/a&gt; on its impact.&lt;/em&gt;&lt;/p&gt;


    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/12/21/keeping-it-real-nikola-lazarevic-on-photorealistic-design-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/12/21/keeping-it-real-nikola-lazarevic-on-photorealistic-design-in-sketch/"/>
    <title>Keeping it real: How Nikola Lazarevic creates photorealistic objects in Sketch</title>
    <summary>We discover the skills, tips and tricks it takes to make realistic digital objects in Sketch</summary><published>2020-12-21T02:00:00+00:00</published>
    <updated>2020-12-21T02:00:00+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;em&gt;We love seeing what you make with Sketch — you truly create some incredible work with our humble Mac app. And every now and then a project comes along that blows our collective minds. So when we saw what appeared to be a photograph of a Porsche 911 with the #MadeWithSketch hashtag, we had to know more.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We sat down with Nikola Lazarevic, a visual designer for web and print at Simplicity LLC, a small design and development agency from Niš in Serbia, to find out how he created that — and many other photorealistic images — in Sketch.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;whats-your-background-in-design-have-you-always-enjoyed-recreating-real-items-digitally&quot;&gt;What’s your background in design? Have you always enjoyed recreating real items digitally?&lt;/h2&gt;

&lt;p&gt;I’m a self-taught designer with a Master’s degree in Computer Science. I started working as a designer back in 2008.&lt;/p&gt;

&lt;p&gt;I’ve always had a weird passion for recreating real items in digital form. It all started with wristwatches that I admire in terms of aesthetics and function. These are watches I would love to own, but could never afford. From there I’ve expanded my work to vintage supercars, like Porsches, Alfa Romeos, Lamborghinis and Ferraris. I’ve also recreated timeless objects designed by Dieter Rams, Dietrich Lubs and Mario Bellini, just to name a few. I find it fun and it helps me to relax between tasks in my daily work!&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A realistic illustration of a 1956 Braun Exporter 2 Radio, created entirely within Sketch.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/radio-final@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Yes, every image on this page was created entirely within Sketch.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;its-fair-to-say-that-sketch-isnt-always-the-first-app-designers-think-of-for-recreating-photo-realistic-objects-why-do-you-enjoy-working-in-sketch-for-these-projects&quot;&gt;It’s fair to say that Sketch isn’t always the first app designers think of for recreating photo-realistic objects. Why do you enjoy working in Sketch for these projects?&lt;/h2&gt;

&lt;p&gt;Well, I guess using Sketch is a bit of an unusual choice! I used to use Photoshop, which is a more typical choice, but drawing with a Pen Tool is challenging and time-consuming — and Photoshop always felt too complicated and massive.&lt;/p&gt;

&lt;p&gt;Five years ago I discovered Sketch and I’ve never looked back. Since then I’ve been using it daily for all kinds of work — from UI and poster design, to brochure design, photorealistic drawing and more.&lt;/p&gt;

&lt;p&gt;In that time I’ve learned to use the vector tool in Sketch quite well. I love how easy it is to control and switch between different types of vector points. I like the option to apply multiple colors and shadow effects to a shape. Symbols are such a powerful feature and time-saver. And the infinite canvas is great. Quite often, when I draw a car I start directly on the Canvas without an actual Artboard, because for me the Canvas is kind of an Artboard too — just without actual dimensions. I also love the ability to export finished work in different sizes with just a few clicks.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A screenshot of a Sketch document with a half-finished illustration of a photorealistic car.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/porsche-process@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Nikola’s Sketch file shows how he builds each image from vector layers.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The bottom line is — in Sketch everything feels so easy and natural. It’s not packed with unnecessary features, it’s very fast, and because everything is vector based, it’s all infinitely scalable. So I don’t have to worry about possible resolution issues.&lt;/p&gt;

&lt;p&gt;So I decided to give it a go and try Sketch for photorealistic illustrations of real objects. And as you can see, it can be done — it’s really fun and I’m enjoying it very much.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bottom line is — in Sketch everything feels so easy and natural. It’s not packed with unnecessary features, it’s very fast, and because everything is vector based, it’s all infinitely scalable. So I don’t have to worry about possible resolution issues.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Doing this type of work in Sketch also helps you sharpen your skills and learn more about the software itself, its functions, and its possibilities.&lt;/p&gt;

&lt;h2 id=&quot;what-tricks-have-you-learned-over-the-years-when-it-comes-to-making-things-look-real-in-sketch&quot;&gt;What tricks have you learned over the years when it comes to making things look ‘real’ in Sketch?&lt;/h2&gt;

&lt;p&gt;I think the most important thing is the proper use of light and textures. You won’t believe what can be achieved using Gradients, Shadows, Inner Shadows, and Gaussian Blur — they all help make an object look real.&lt;/p&gt;

&lt;p&gt;Lighting and shadows add depth and make illustrations pop and feel more realistic. It’s also quite important to choose a single-point light source — it makes it easier to understand where to put highlights and shadows.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Six images, showing the progress of recreating a photorealistic Braun signal radio ABR 21 in Sketch by building each section one at a time.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/building-blocks@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;I use gradients to establish lighting — lighter colors in the gradient show where the light is coming from. Then I create flat shapes for highlights and shadows based on the light’s direction. In the end, I use Gaussian blur to soften them and achieve a more realistic look. The bigger the gap between the brightest highlight and darkest shadow, the more 3D and realistic your object looks. But if you overdo it, details will get lost.&lt;/p&gt;

&lt;p&gt;Also, you can use Pattern Fill on its own — or combine it with Motion Blur — to create textures like plastic, brushed metal, and more, which adds a nice realistic touch to illustration.&lt;/p&gt;

&lt;h2 id=&quot;how-long-does-a-design-typically-take-you&quot;&gt;How long does a design typically take you?&lt;/h2&gt;

&lt;p&gt;When I started I was really slow. I needed a couple of days to finish a car or a watch. Over time I’ve become much faster. With every illustration, I’ve learned more about Sketch’s functions and features, which has helped me speed up.&lt;/p&gt;

&lt;p&gt;How long a project takes me depends on the complexity of the object, but nowadays I can finish a watch under four hours, or a car in 15-16 hours. Practice is everything. The more time you spend learning about the software you use the more efficient you become.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An illustrated image showing a Nomos Metro Date Power Reserve watch that Nikola recreated in Sketch using Vector shapes.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/watch-illustration@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;As you can see, the level of detail that Nikola can create in Sketch is impressive — and makes each piece even more realistic.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;whats-your-design-process-for-a-project-like-this&quot;&gt;What’s your design process for a project like this?&lt;/h2&gt;

&lt;p&gt;I always start with real-life photography on the Canvas, since I draw objects that already exist.&lt;/p&gt;

&lt;p&gt;The design process is quite simple: I choose an object that I want to draw — a car, watch, radio, or any other object — and I try to find as many photos of it from different angles so I can carefully replicate all of the important details. The devil is in these details — they make all the difference, and make your illustration stand out from the crowd.&lt;/p&gt;

&lt;p&gt;I also like to learn the historical background about an object I draw. Somehow it helps me get into the mood.&lt;/p&gt;

&lt;h2 id=&quot;how-does-sketch-help-you-when-it-comes-to-creating-these-designs-which-tools-do-you-use-the-most&quot;&gt;How does Sketch help you when it comes to creating these designs? Which tools do you use the most?&lt;/h2&gt;

&lt;p&gt;It all starts with the Vector tool that I use to outline all the elements.&lt;/p&gt;

&lt;p&gt;Then I style every element using solid colors, different types of gradients, inner shadows, and shadows.&lt;/p&gt;

&lt;p&gt;I quite often use the Rotate Copies function, which is a real time-saver — imagine manually rotating 300 lines around a circle! — as well as Boolean operations to create complex shapes. And I use Symbols a lot. It’s a powerful Sketch feature and yet another time-saver, since I often have reusable elements in my illustrations.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An in-progress illustration of a 1969 Porsche 911, created in Sketch.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/porsche-progress-detail@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;what-tips-and-advice-do-you-have-for-other-designers-looking-to-start-creating-more-realistic-work-in-sketch&quot;&gt;What tips and advice do you have for other designers looking to start creating more realistic work in Sketch?&lt;/h2&gt;

&lt;p&gt;Start with simple objects. Then with every new illustration you create, move towards more and more complex objects. It’s also important to pay attention to the small details, because they make the biggest difference. Spending time on these will make your illustration more impressive and realistic.&lt;/p&gt;

&lt;p&gt;You also must arm yourself with patience. Designing realistic objects is not an easy task, but the end result will be well worth it. And finally, no matter how frustrating this type of work can be sometimes — don’t forget to smile. 😊&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;We love sharing your design projects and telling your stories. If you’ve recently had a project that you’ve #MadeWithSketch, let us know on our social channels so we can share it with the rest of our community.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/&quot;&gt;Read Nikola’s tutorial on SmashingMagazine.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?hashtags=MadeWithSketch&quot;&gt;Share your #MadeWithSketch project&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/12/17/how-sketch-helps-salesforce-maintain-its-industry-leading-design-system/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/12/17/how-sketch-helps-salesforce-maintain-its-industry-leading-design-system/"/>
    <title>Building better: How Sketch helps Salesforce maintain its industry-leading design system</title>
    <summary>We talk Assistants and designing at scale with the Salesforce team to discover the key to a great design system</summary><published>2020-12-17T10:00:00+00:00</published>
    <updated>2020-12-17T10:00:00+00:00</updated>
    
    <content type="html">
      &lt;p&gt;A good design system makes everyone’s life easier. It gives designers the elements and guidance they need to work within an approved structure. It helps developers work with predictable, consistent components. And it helps businesses design and build new products, faster — all with consistent user experiences.&lt;/p&gt;

&lt;p&gt;And if you know design systems, you probably know Salesforce. Salesforce’s Lightning Design System is an industry leader, with thousands of components, clear instructions, and sensible, considered decisions about color and sizing. Plus, it comes with a Sketch Library, so it’s super simple to pick up and use.&lt;/p&gt;

&lt;p&gt;The Lightning Design System has evolved a great deal since its launch in 2015, but after speaking to Kirupa Chinnathambi, Senior Director of PM on the system, it’s clear that the core goals remain the same today. “As Stephanie Rewis, one of the founding engineers of the Lightning Design System &lt;a href=&quot;https://medium.com/salesforce-ux/building-an-enterprise-framework-is-hard-1e8d8b33e082&quot;&gt;describes&lt;/a&gt;, the initial goals were around providing a scalable and maintainable way for teams to adopt the latest evolution of our UX guidance,” he says. For the team, that means great documentation, plenty of visual assets, strong communication channels and feedback loops across the ecosystem, and much more.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A screenshot of the Lightning Design System homepage.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/salesforce-homepage@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The Lightning Design System home page&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“Today, we take these two goals and their outputs for granted,” Kirupa continues. “But when the Lightning Design System was first coming online, the team was really paving new ground with little prior art to reference.” Today, the team is constantly evolving what the Lightning Design System does — and basing that evolution on research, customer feedback, telemetry and industry trends. But those original two goals are never far from the forefront.&lt;/p&gt;

&lt;p&gt;But there’s another key aspect that makes the Lightning Design System such a huge success — one that is more about people than design.&lt;/p&gt;

&lt;h2 id=&quot;making-it-personal&quot;&gt;Making it personal&lt;/h2&gt;

&lt;p&gt;“One of the biggest aspects for us is having good relationships with the teams that use our design system to build their UX,” says Kirupa. With the Lightning Design System, that’s everyone from internal teams at Salesforce that are evolving the company’s various products, to external designers and developers who use the platform for their own solutions.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“One of the biggest aspects for us is having good relationships with the teams that use our design system to build their UX”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“Keeping in close communication — directly and indirectly — across our vast ecosystem is a time-consuming task. But it’s also really rewarding, because it ensures we spend our time building the right things.”&lt;/p&gt;

&lt;p&gt;And those relationships have another valuable benefit for the team, too— providing behind-the-scenes glimpse at how the roles of design and engineering are constantly evolving. “We get a more accurate, dotted-line roadmap that we can be creative in filling out,” Kirupa explains. “Our investments in &lt;a href=&quot;https://lightningdesignsystem.com/tools/overview/&quot;&gt;design and developer tools&lt;/a&gt;, which are fairly unique for a design system team, is one example of how we react to these insights in a targeted way.”&lt;/p&gt;

&lt;p&gt;For Salesforce, those tools include a powerful Sketch plugin, dedicated UI design kits and, most recently, a new &lt;a href=&quot;/blog/2020/08/11/introducing-assistants/&quot;&gt;Assistant&lt;/a&gt; — the &lt;a href=&quot;/extensions/assistants/lightning-design-system-linter/&quot;&gt;Lightning Design System Linter&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;rules-are-made-to-be-followed&quot;&gt;Rules are made to be followed&lt;/h2&gt;

&lt;p&gt;When we released &lt;a href=&quot;/docs/assistants/&quot;&gt;Assistants&lt;/a&gt; with Sketch 68, we wanted to help you spot issues with your documents, stay consistent with design systems and prepare your files for collaboration. For Salesforce, creating an Assistant that helped users follow the Lightning Design System rules was a no-brainer.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Keeping in communication across our vast ecosystem is time-consuming. But it’s also really rewarding, because it ensures we spend our time building the right things.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“Defining rules for using the system is hugely important — both on the design and engineering side,” says John Earle, Lead Software Engineer on the Lightning Design System. But for the Salesforce team, it’s just as important to make those rules easy to follow.&lt;/p&gt;

&lt;p&gt;“With a system as expansive as the Lightning Design System, it’s easy for even seasoned Salesforce designers to use color values or text sizes that don’t correspond to tokens,” he continues. These small errors have a cascading effect, resulting in hardcoded values in code. And because it’s hard to change those later on, it makes the end user’s experience inconsistent.&lt;/p&gt;

&lt;p&gt;Using the Lightning Design System Linter with a Sketch document is simple. Once you’ve added it, it’ll run in the background, showing notifications if there are any aspects of your design that don’t follow the Lightning Design Systems’s rules.&lt;/p&gt;

&lt;p&gt;“Keeping users informed of these rules — and making sure they’re enforced — is just as important as the rules themselves,” continues John. “Most of our rules live directly within the system, in metadata. An API disseminates these rules, which is why we can build and use enforcement tools, such as our &lt;a href=&quot;https://www.lightningdesignsystem.com/tools/validator/&quot;&gt;SLDS Validator&lt;/a&gt;, and now, the Lightning Design System Linter.”&lt;/p&gt;

&lt;h2 id=&quot;part-of-the-family&quot;&gt;Part of the family&lt;/h2&gt;

&lt;p&gt;When combined with the Lightning Design System’s Sketch plugin, the Sketch UI kit, and the fonts, colors and icons that Salesforce offers, it’s a seriously powerful combination. Not only do you have all the components and assets you need to design, you have information on how to use it correctly — and an Assistant to tell you if you make a mistake.&lt;/p&gt;

&lt;p&gt;“The audience for our design system spans all skill levels — from designers, developers and product managers to &lt;a href=&quot;https://www.salesforce.com/blog/2016/05/what-is-a-salesforce-admin.html&quot;&gt;admins&lt;/a&gt; and ‘accidental’ designers for whom the designer hat is just one of the many hats they already wear,” says Kirupa. “The most rewarding part is seeing our customers across all these diverse skillsets use the guidance, tools, and out-of-the-box solutions we provide to bring their own user experiences to life.”&lt;/p&gt;

&lt;p&gt;For users, this all means that it doesn’t matter if you spend all your time &lt;a href=&quot;https://lightningdesignsystem.com/tools/sketch/&quot;&gt;in Sketch&lt;/a&gt;:&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A screenshot showing Salesforce’s Lightning Design System plugin being used in Sketch.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/salesforce-plugin@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Or if you like to &lt;a href=&quot;https://lightningdesignsystem.com/tools/validator/&quot;&gt;write code&lt;/a&gt;:&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A screenshot of someone working on Salesforce content using a code editor.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/salesforce-code@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;However you work, the Lightning Design System can help you — to borrow from the company’s mission statement — build beautiful, performant, and accessible product experiences. And now, that’s all backed up by a powerful Assistant.&lt;/p&gt;

&lt;h2 id=&quot;assistant-simplicity&quot;&gt;Assistant simplicity&lt;/h2&gt;

&lt;p&gt;Before we let the Salesforce team go, we wanted to ask about their experience of building their Lightning Design System Linter. Our team designed Assistants to be easy-to-create — did their hard work pay off?&lt;/p&gt;

&lt;p&gt;“I’ve had a blast building our Assistant!” smiles John. “Setup was quick — I had my first rule up and running in minutes. I love that the context object gives me easy access to document properties, so I don’t need to crawl through layers to find what I need. The Typescript environment helps me adhere to the proper interface, and guides me with autocomplete in VS Code. And to top it all off, I can have Jest watch for changes as I’m developing so I don’t need to recompile my code manually. The development experience is well-documented and modern — a pleasure to work in.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I’ve had a blast building our Assistant! The development experience is well-documented and modern — a pleasure to work in.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s great to hear this kind of feedback from a team as big and successful as Salesforce. But this isn’t the end of their plans for design validation in Sketch. “We’ve really just scratched the surface with our initial release of the Assistant,” says John. “In the future we’re looking to validate spacing between and within layers. And we’d like to connect the Assistant to our &lt;a href=&quot;https://www.lightningdesignsystem.com/tools/sketch/&quot;&gt;Lightning Design System Plugin&lt;/a&gt; to generate specifications for engineers. These specs will reference design system token values and component blueprints, so engineers don’t need to go out of their way to find what they need to use.”&lt;/p&gt;

&lt;h2 id=&quot;looking-ahead&quot;&gt;Looking ahead&lt;/h2&gt;

&lt;p&gt;Beyond its Assistant, the future is bright for Salesforce. And while Kirupa can’t talk too much about their plans, he does share a few little tidbits. “We’ll continue to invest in the big areas we’ve been actively talking about over the past year, including &lt;a href=&quot;https://lightningdesignsystem.com/guidelines/overview/&quot;&gt;guidance and documentation&lt;/a&gt;, &lt;a href=&quot;https://lightningdesignsystem.com/tools/overview/&quot;&gt;tooling support&lt;/a&gt;, richer component styling (via &lt;a href=&quot;https://lightningdesignsystem.com/platforms/lightning/styling-hooks/&quot;&gt;Styling Hooks&lt;/a&gt;), &lt;a href=&quot;https://lightningdesignsystem.com/accessibility/overview/&quot;&gt;accessibility support&lt;/a&gt; (including WCAG 2.0 and 2.1), &lt;a href=&quot;https://www.salesforce.com/news/stories/the-power-of-salesforce-on-the-go-product-vp-dan-mccall-on-the-new-salesforce-mobile-app/&quot;&gt;mobile-friendly enhancements&lt;/a&gt;, an &lt;a href=&quot;https://medium.com/salesforce-ux/the-salesforce-color-system-c7c6b5b9c577&quot;&gt;improved color system&lt;/a&gt;, and much more.”&lt;/p&gt;

&lt;p&gt;But for Kirupa, what’s more exciting than any of these future plans is seeing how people use the Lightning Design System to create amazing work. Sometimes, they go far beyond what the team could ever have planned. “My favorite cool story is when someone dropped by our booth at Dreamforce and explained how they are using the design system to help build a Virtual Reality experience for navigating through their data,” he laughs. “I often wonder if they were from the future!”&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/extensions/assistants/lightning-design-system-linter/&quot;&gt;Try the Lightning Design System Linter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/08/11/introducing-assistants/&quot;&gt;Read more about Assistants&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/12/02/how-we-redesigned-the-sketch-icon-for-big-sur/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/12/02/how-we-redesigned-the-sketch-icon-for-big-sur/"/>
    <title>The new Sketch icon: how we redesigned a classic for Big Sur</title>
    <summary>“We tried to explore as many ideas as possible to see what we could do with the new style”</summary><published>2020-12-02T09:00:27+00:00</published>
    <updated>2020-12-02T09:00:27+00:00</updated>
    
    <content type="html">
      &lt;p&gt;Last month we released version 70 of our Mac app with a &lt;a href=&quot;/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover/&quot;&gt;major UI refresh for macOS Big Sur&lt;/a&gt;. And while our design team spent a long time working out the best way to get Sketch looking great in the updated OS, they had another project to think about — a new icon for the Mac app.&lt;/p&gt;

&lt;p&gt;The UI needed hundreds of hours of work to get pixel-perfect, but redesigning an icon that may sit in your Dock (and in front of your eyes) all day, every day is no small task either.&lt;/p&gt;

&lt;p&gt;This week we sat down with the project’s Design Lead, Prekesh, to find out how he went about re-imagining the Sketch icon for a new era, and why it was never as simple as just recreating our famous diamond.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;experimentation&quot;&gt;Experimentation&lt;/h2&gt;

&lt;p&gt;Reimagining an icon that’s so well-known across the industry is no easy challenge. For Prekesh, the goal was to try and do something new, while maintaining the essence of Sketch.&lt;/p&gt;

&lt;p&gt;“I think I called the first document I created ‘definitely not a diamond on a white box‘,” he says, with a wry smile. “We tried to explore as many ideas and options as possible to see what we could do with Big Sur’s new style.” He isn’t kidding. The process started with almost 50 concepts on an iPad, drawn using an Apple Pencil.&lt;/p&gt;

&lt;p&gt;“I just started sketching a bunch of ideas that came to my mind, no matter how outlandish,” he explains. “The goal was to throw ideas at the wall and see what stuck, what didn’t, and what we could move forward with.” Next, he took those drawings into Sketch and started exploring the different approaches in higher fidelity.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing some of the initial idea sketches that Prekesh created.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-initial-sketches@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Prekesh had some fun exploring ideas in the initial sketching stage: “Not all of these were realistically going to actually become app icons, but I took the ones I liked the most to Sketch.”&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;As he posted updates in our internal Slack channels, excitement started to grow, and he got a ton of useful feedback from other designers on the team. Some of the more ‘out there’ designs really picked up some interest, as Prekesh thought about the pros and cons of reinventing the app’s icon entirely.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing some initial sketches of icons with pens and nibs alongside vector versions of those icon ideas.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-vector-editing@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;After exploring some ways to incorporate vector editing and the Pen too, Prekesh found that these ideas got messy as the icon scaled down — plus, Sketch is much more than a vector editor.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing some initial ideas of icons with pencils overlaid on rectangles, with vector versions of these ideas next to them.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-pencil@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Prekesh had a great time making extra tools like pencils, but these ideas were too monochrome.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“We experimented with moving away from the diamond, but that seemed a little silly considering that it’s such a strong part of our brand,” he explains. “So we created a bunch of new diamond shapes — some with perspective, some without; some with more faces, some with less.” From there, it became of question of which ones worked best, and how to integrate these elements with different backdrops.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An imagine showing a top-down reimagining of the Sketch diamond in an early drawing and a vector version of that drawing.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-top-down-diamond@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;He started moving onto ideas that used the diamond, but in different ways. By taking an old alternative top-down icon he’d worked on and tweaking it to fit into the squircle shape.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;finding-the-balance&quot;&gt;Finding the balance&lt;/h2&gt;

&lt;p&gt;Getting the balance right between the foreground shapes and the background was particularly tough. “Something we found out very quickly was that there was often a visual struggle between the rounded rectangle backdrop and the diamond,” he says. “We knew we needed to find a way for them to compliment each other, rather than fight for the viewers’ attention.”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing sketches and vector versions of icon ideas that used the new Sketch UI and a semi-transparent diamond.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-window-transparency@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;These were the first ideas that included elements of the Sketch UI in the icon. Prekesh tried working some transparency into it — both in the diamond and the sidebar.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing different ways of using the diamond overlaid on an illustrated version of the Sketch UI, with annotations explaining the pros and cons of each approach.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-figuring-out-details@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;As concept work continued, the window and diamond metaphor stuck. Balancing the background and diamond proved a challenge, which resulted in Prekesh simplifying the background slightly.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;As work progressed, two frontrunners emerged, both on a similar background — one using something very close to our current diamond, and another that took a more 3D approach.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An illustration showing the two diamond designs that Prekesh worked with during development.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-the-two-diamonds@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Since we were refreshing the icon, Prekesh also worked on a new, 3D version of the diamond. You’ll see this slightly tilted variant used throughout the other mockups on this page.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure&gt;&lt;img alt=&quot;A 3D render of the two diamond shapes that Prekesh worked with during development.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-3d-model@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;He then used Blender to create rough 3D renders for lighting reference.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;In the end, after several weeks of internal testing and a lot of input from teams across the company, the decision was clear. This would be our final icon:&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;The final icon, shown on the left standing on its own, and on the right in a macOS Dock&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-final-release@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;By stripping back the icon’s background to its basics and adding a subtle transparency to the sidebar, we think it achieves a nice balance.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;its-all-in-the-details&quot;&gt;It’s all in the details&lt;/h2&gt;

&lt;p&gt;For Prekesh, it’s the small details that make our new icon special. “I like its subtlety,” he says. “There are details and iterations that update the previous icon, but don’t necessarily move too far away from what makes the Sketch icon the Sketch icon.” But after all his outlandish sketches, is he disappointed that we ended up with a design that’ll feel familiar to people?&lt;/p&gt;

&lt;p&gt;“Not really — that’s kind of what felt right to go with after all of our explorations,” he explains. “And there are some subtle details that I love. The rounded rectangle background is actually a simplified representation of &lt;a href=&quot;/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover/&quot;&gt;Sketch’s Big Sur user interface&lt;/a&gt;, and the Sidebar on the left has transparency, which means it ever-so-slightly takes on the background color of your wallpaper.” The diamond itself got some love too — Prekesh redrew and re-colored it from scratch to improve the contrast and make it slightly more vibrant. Plus, a new, deeper shadow makes it feel like it’s really floating in front of the UI.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/icon-transparency@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/icon-transparency@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;The subtle transparency in the sidebar means you get a hint of your wallpaper through the icon.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Prekesh says he took his inspiration from Big Sur’s new design, and Apple’s own icons — of which he’s a big fan. “I love the new direction,“ he says. “The restriction of the rounded rectangle for icons will no doubt encourage people to use that space more creatively.”&lt;/p&gt;

&lt;p&gt;Reflecting on the process of reinventing such a well-known icon, Prekesh admits he felt the huge responsibility on his shoulders. “It was a little surreal at first, because I’ve looked up to the designers of the previous icons for basically my entire career,” he explains. “For Emanuel (Sá, our Chief Design Officer) and Marcelo (Marfil, our Design Director) to entrust me to explore and create the next iteration of the app icon felt pretty great. But the pressure was on!” he laughs.&lt;/p&gt;

&lt;h2 id=&quot;the-sketch-cinematic-universe&quot;&gt;The Sketch Cinematic Universe&lt;/h2&gt;

&lt;p&gt;As if redesigning the icon you’ll see in your Dock every day wasn’t enough of the challenge, that wasn’t the end of the journey. As well as the version of our Mac app that you use, we also maintain several test builds, each at a different stage of development. From the QA team’s Debug version and the early Experimental build, all the way through to our Private and Public Beta versions, we use different icons for each so it’s clear who’s testing what features, and when.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing the six icons we used to use to denote different internal versions of the Mac app.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-old-icons@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Before, each release build had a different colored diamond. In the top row: Release, Beta and Private. In the bottom row: Internal, Experimental and Debug.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Before, we simply used different colored diamonds to denote the different versions. But for Big Sur, Prekesh decided to have some fun. “I thought of ideas where there was literal visual progress from the ‘Xcode build’ icon all the way to public release icon, and they sort of told a story,” he explains. “But that would only make sense to us internally, and didn’t feel like the right approach for these.”&lt;/p&gt;

&lt;p&gt;The result is six completely unique icons, each with its own color scheme and flavor. It was a chance for Prekesh to bring some of those early, more outlandish ideas to life.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An icon design inspired by the Matrix, with green outlines and green characters floating in the background.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-matrix@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;This Matrix-inspired design very nearly became the icon for our Debug release. In the end, the team decided on a design that felt closer to Xcode’s blue macOS icon.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“Our Experimental build always includes the newest features that we’re working on, and Glenn [Hitchcock, another member of the design team] had the idea to try something that showed that it was really ‘out there’. So why not put the diamond in space?”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;The new icon for our internal ‘Experimental’ release, featuring a purple diamond on a space background.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-final-experimental@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The Experimental build icon. In this case, the it really does to live up to its name.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;And what about the icon hiding behind the curtain? “That one’s slightly funny. We wanted to tease the new icon on Twitter, so I spent most of a day drawing the cloth for what was just going to be used in a teaser image,” he laughs. “After all that work, I realized we could actually use it for our Private Beta icon. So that saved me some time!”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image of an early sketch of a diamond icon covered by a cloth, next to the finished version of the icon we now use for our Private build.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-final-private@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;”Marcelo specifically told me not to spend too long on this because it was for Twitter and I still had more work to do on the icons,” smiles Prekesh.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;For Prekesh, the challenge was to give each icon its own identity — and make sure it communicated something about what people should expect from that version. He’s pleased with the results. And it’s fair to say they’ve gone down well with the rest of the team internally, too.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing all six new Sketch icons in a grid.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/icon-all-new-icons@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The full team assembled. In the top row: Release, Beta and Private. In the bottom row: Internal, Experimental and Debug&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“I suspect some people will see these and want to use them as their main Sketch icon,” he smiles. “Hey, all I can say is: we’re hiring — come join us!”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;We love giving you behind-the-scenes peeks at the work we do on Sketch. What would you like to see? Let us know on social and we’ll consider your ideas for our next sneak peek. For now, we hope you enjoy using the latest Mac release.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover/&quot;&gt;Read about how we redesigned Sketch for Big Sur&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us what you think of our new icon on Twitter&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/11/24/how-sketch-performs-on-apple-M1-silicon/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/11/24/how-sketch-performs-on-apple-M1-silicon/"/>
    <title>Switching Silicon: How Sketch performs on Apple’s new hardware</title>
    <summary>Just how much faster is Sketch with Apple Silicon? We ran some tests — and the results were impressive</summary><published>2020-11-24T10:30:55+00:00</published>
    <updated>2020-11-24T10:30:55+00:00</updated>
    
    <content type="html">
      &lt;p&gt;Earlier this month, Apple finally announced its new M1 chip, and gave us some &lt;a href=&quot;https://www.apple.com/mac/m1/&quot;&gt;mind-blowing numbers&lt;/a&gt; to demonstrate how fast its three new Macs really are. Naturally, we were excited to get our hands on a new machine to test these performance claims for ourselves — and see just how Sketch would run on this new hardware.&lt;/p&gt;

&lt;p&gt;Measuring performance objectively across machines in an application as interactive as Sketch isn’t easy. Recording side-by-side operations produced some notable differences — browsing through complicated Sketch documents was at least 40% faster in our measurements, for example — and in an unscientific way everything &lt;em&gt;felt&lt;/em&gt; faster. But we could never be sure whether other factors were at play.&lt;/p&gt;

&lt;p&gt;But then we realized that we had another way to put the new Macs through their paces — a more objective, measurable way.&lt;/p&gt;

&lt;h2 id=&quot;a-mac-mini-server-farm&quot;&gt;A Mac mini server farm&lt;/h2&gt;

&lt;p&gt;At Sketch, the Mac mini holds a special place in our heart. We operate a server farm of 19 Mac minis. Together, they process over 60,000 Sketch documents every day — for developer handoff, asset exporting, web previews, and our upcoming &lt;a href=&quot;http://sketch.com/collab&quot;&gt;live collaboration feature&lt;/a&gt;. And as you can imagine, speed and performance make a huge difference here.&lt;/p&gt;

&lt;p&gt;We wanted to know if the M1 chip would speed up our operations and ultimately make the experience of using Sketch even better as a result. To help us figure that out, we conducted three separate tests.&lt;/p&gt;

&lt;h2 id=&quot;measuring-overall-performance&quot;&gt;Measuring overall performance&lt;/h2&gt;

&lt;p&gt;First, let’s set the scene. For this test, we ordered the &lt;a href=&quot;https://www.apple.com/shop/buy-mac/mac-mini/apple-m1-chip-with-8-core-cpu-and-8-core-gpu-256gb#&quot;&gt;entry-level 2020 Mac mini&lt;/a&gt;, featuring an Apple M1 Chip with 8GB of RAM. Its purchase price is $699.&lt;/p&gt;

&lt;p&gt;We’re comparing this machine with those that are currently running our render farm; the 2018 Mac mini, with 3.2 GHz Intel Core i7 processors and 32GB RAM. You can still buy this model today, starting at $1,299 for the same processor and 8GB RAM&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;To test performance, we took a number of complex Sketch documents, loaded them up, then exported a few hundred images out of each document&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. This gives us a nice variety of ‘disk’ activity, memory usage, CPU usage and GPU usage to help us compare the machines.&lt;/p&gt;

&lt;p&gt;And how did they compare?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/speed-graph-1@2x.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The results were impressive and confirmed our less scientific observations from earlier. The Mac minis currently running our render farm are the top-of-the-line model from 2018, and they were consistently outperformed by 30-40% in our first test compared to the base-line model of the new Mac mini. That’s 30-40% more performance for almost half the price!&lt;/p&gt;

&lt;p&gt;It’s worth noting that these tests don’t accurately reflect interactive real-life Sketch use (due to all the disk writing, for example), nor are they designed to test one isolated unit on the chip — like the CPU.&lt;/p&gt;

&lt;h2 id=&quot;measuring-raw-cpu&quot;&gt;Measuring raw CPU&lt;/h2&gt;

&lt;p&gt;With that in mind, we decided to run another set of tests to get a better idea of how these two pieces of hardware perform from a raw CPU perspective. In this case we compared the results of a detach operation — we took those same large and complex Sketch files and recursively detached every Symbol instance in each.&lt;/p&gt;

&lt;p&gt;Performing this task gave us a better idea of how these two machines compare based almost solely on CPU. And what did we find?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/speed-graph-2@2x.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here, the results are almost identical with the lofty numbers we got from Apple. The new M1 Mac mini was almost twice as fast as our 2018 machine.&lt;/p&gt;

&lt;h2 id=&quot;comparing-apples-to-apples&quot;&gt;Comparing Apples to Apples&lt;/h2&gt;

&lt;p&gt;In the November event, Apple’s Laura Metz, Mac Product Line Manager, said that the MacBook Air is the world’s best-selling 13-inch notebook, and the company’s best-selling model. So we decided to test against an early 2020 Intel MacBook Air as well (1.1 GHz Intel Core i5 with 8 GB RAM). The Mac mini we’re testing here shares the same M1 chip as the newly released MacBook Air, so although it’s not a perfect comparison, it should be a decent indicator of the performance jump you can expect from the new Air compared to the older model.&lt;/p&gt;

&lt;p&gt;And, just for good measure, we decided to throw in a 2019 16-inch MacBook Pro (2.3 GHz Intel Core i9 with 32GB RAM) as well. Because, why not?&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/speed-graph-3@2x.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, the results are staggering. The 2019 MacBook Pro, as could be expected, easily outpaces the MacBook Air. But then our new Mac mini goes a step further, blowing both of them out of the water. The new Mac mini consistently completed these tasks &lt;em&gt;three times faster&lt;/em&gt; than the early 2020 MacBook Air, and twice as fast as the 2019 MacBook Pro.&lt;/p&gt;

&lt;h2 id=&quot;what-it-all-means&quot;&gt;What it all means&lt;/h2&gt;

&lt;p&gt;There’s no doubt about it — these M1 chips are truly amazing. It’s hard to put into words just how much more performance you get from this new generation of Macs compared to even their recent predecessors. Though, these numbers sure help quantify it.&lt;/p&gt;

&lt;p&gt;For now, we’re eagerly waiting for Apple to have enough M1 Mac minis available for us to upgrade our server rendering operations. These new machines will help us process documents faster, run Cloud more efficiently, and make our &lt;a href=&quot;http://sketch.com/collab&quot;&gt;exciting upcoming features&lt;/a&gt; better than ever.&lt;/p&gt;

&lt;p&gt;The best news is that, as a Sketch user, you don’t have to buy a new Mac to feel the benefits of Apple’s M1 chip. We can deliver those improvements by upgrading our servers. And of course, if you are lucky enough to have a new M1 machine, we’ve made sure our Mac app can take advantage of these big performance improvements — so you can create amazing work, faster than ever.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;This $1,299 model only includes 8GB of RAM — to upgrade to the 32GB RAM model we use in our server farms would cost $1,899. But the tests we’re carrying out here don’t get close to using that much RAM, so we didn’t think it was fair to compare those machines (and prices) specifically. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;When using Sketch in real-life, we try to utilize all cores efficiently. In this setup, the workflow is deliberately single-threaded so we can run a lot of these processes together efficiently. Remember, this is not a typical workflow for users — but it is a good reflection of the work we need to do on the server. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The Mac mini we tested has the same chip and speed as the latest M1 MacBook Air — the mini simply has a fan to help heat dissipation. However, these tests wouldn’t cause CPU throttling to kick in had we measured this on an Air. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;


    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover/"/>
    <title>Yes Sur: Behind the scenes of Sketch’s macOS makeover</title>
    <summary>“We always want to put your designs front and center so they can shine — the last thing we want is for the interface to get in the way.”</summary><published>2020-11-18T10:00:43+00:00</published>
    <updated>2020-11-18T10:00:43+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;em&gt;Today, we’re excited to share some details of our Big Sur update. Refreshing our UI for Apple’s latest OS has taken countless hours of hard work, tough decisions and careful revisions from dozens of people across the Sketch team. We want to say a big thank you to them all — we’re incredibly proud of the work they’ve done.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To get the lowdown on how the team created Sketch’s beautiful new interface — and to show off some of our favorite details — we sat down to chat with our Design Director Marcelo Marfil.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;so-whats-new&quot;&gt;So what’s new?&lt;/h2&gt;

&lt;p&gt;“Early on, we had a single goal in mind. We wanted to make sure Sketch on Big Sur still put your designs front and center so they could shine,” Marcelo explains. “The last thing we wanted was for the interface to get in the way.” With that in mind, the team focused on tweaking and refining the existing interface rather than a complete overhaul. They wanted the app to feel familiar after your Big Sur upgrade, so you could instantly get back into your designs. “In essence, it continues to be the same Sketch people know and love,” he says. This is an evolution, not a revolution.&lt;/p&gt;

&lt;p&gt;That said, the team did take the opportunity to push things a little further in a few key areas. “Adopting new OS standards like a full-height sidebar and toolbar already make a huge difference, but we couldn’t stop there,” says Marcelo.&lt;/p&gt;

&lt;h2 id=&quot;yes-sur&quot;&gt;Yes Sur&lt;/h2&gt;

&lt;p&gt;“As with anything new, there’s an inevitable learning curve you have to work through,” he continues. After taking some time to use the betas and understand the new paradigms, the team started exploring how they could make sure our native app still felt ‘at home’ on Mac — while continuing to support people that want to stick with macOS Catalina (or even earlier OSs).&lt;/p&gt;

&lt;p&gt;It started with the toolbar. While aligning with Apple’s new design, which adds the document title inline with other toolbar items, they reorganized the default toolbar with the tools they think you’ll use the most. There’s even a new Notifications icon in the top-right corner of the window which gathers your notifications together, making them easy to manage. Don’t worry — you can still customize it with your own favorite tools with a Ctrl-click. You’ll also notice the toolbar (and the rest of the app) features some gorgeous new icons. More on them later.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-toolbar-animation@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-toolbar-animation@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;With Big Sur moving the document title into the toolbar, it was the perfect opportunity for the team to redesign it — with all new icons.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Next, the team turned their attention to the Inspector. “Even though our app’s user interface feels at home on macOS, we rely a lot on custom controls and materials,” Marcelo explains. “It always comes down to whether we think we can give our customers a better experience.” Like the rest of the Mac app, the new Inspector will feel familiar, but every element has been painstakingly reworked to be as beautiful as it is functional.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing the new Inspector design in Sketch 70.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-inspector@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The Inspector has been given a makeover, too — with the new orange highlight color taking centre stage.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;You’ll also notice that the accent color across the app has changed — it’s now orange, to match our brand colors across the Sketch platform. Of course, if orange isn’t your thing, you can choose a color you like in System Preferences. “And we modernized our Documents Window,” Marcelo points out. “It now has a much more familiar look.”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image showing the new design for the Documents Window in Sketch 70.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-docs-window@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;evolution-not-revolution&quot;&gt;Evolution, not revolution&lt;/h2&gt;

&lt;p&gt;“When Apple rolled out the first few betas, we took our time and went deep into OS changes and paradigms.” he explains. “We wanted to better understand what would work for us, and where we could do better.”&lt;/p&gt;

&lt;p&gt;As a result of that thinking, you‘ll find that some tools, such as Scale, have changed from Sheets to become modes in the Inspector. Big Sur’s new, larger design for Sheets would have covered the Canvas while you made adjustments. By shifting them to the Inspector, you can carry on working uninterrupted.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-scale-inspector@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-scale-inspector@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;Moving certain tools, such as Scale, to the Inspector means fewer interruptions and a smoother workflow.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“As we always try to do at Sketch, I believe we found a good balance between what the system has to offer and where we want to take it to going forward,” says Marcelo. And never was this balance more apparent than in the team’s approach to new icons.&lt;/p&gt;

&lt;h2 id=&quot;iconic-design&quot;&gt;Iconic design&lt;/h2&gt;

&lt;p&gt;The introduction of &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/&quot;&gt;SF Symbols&lt;/a&gt; in Big Sur brings together iOS and Mac iconography to make it consistent for the first time. Unfortunately, Apple Symbols simply didn’t offer the design team enough control when it came to implementing icons across the interface.&lt;/p&gt;

&lt;p&gt;“At Sketch we care deeply about our iconography and pixel precision,” says Marcelo. “Even though Apple Symbols is a great concept, sadly it didn’t quite live up to our standards.” Because Apple designed SF Symbols to support multiple weights and sizes, their edges can sometimes appear slightly blurred. After a lot of discussion, the team decided that &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uiimage/creating_custom_symbol_images_for_your_app&quot;&gt;Apple’s Symbols&lt;/a&gt; weren’t right for the first Sketch release on Big Sur. Instead, they reworked every icon as a vector.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-icons-drawn@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-icons-drawn@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;”We wanted to make sure our new icons had a good balance of crispness and smoothness, but still fit nicely within the Big Sur theme and our brand,” he explains. “After all, we make a design app for designers.” We know we’re biased, but we hope you’ll agree that the results are quite beautiful.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A close-up image of the new toolbar in Sketch 70.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/big-sur-toolbar@2x.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;These are the new default icons in the toolbar, but don’t worry — you can still customize it to your liking with a Ctrl+click.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This isn’t the end for icon design in our Mac app, though. As with all aspects of our Big Sur design, the team are keeping an eye on developments for future releases. “I honestly hope we can eventually convert our own icons to Apple’s Symbols too, with all their sizes and suitable weight variants.”&lt;/p&gt;

&lt;h2 id=&quot;this-is-just-the-start&quot;&gt;This is just the start&lt;/h2&gt;

&lt;p&gt;This might be a new design for Sketch, but as Marcelo explains, our philosophy remains the same. “Even with a fresh new look, this update is a continuation of everything we learned over the last decade,” he says. “Our focus has always been on giving you the tools you need to create amazing designs in &lt;a href=&quot;https://www.sketch.com/blog/2020/10/26/part-of-your-world-why-we-re-proud-to-build-a-truly-native-mac-app/&quot;&gt;a native Mac application&lt;/a&gt;. We couldn’t be more excited to be part of this important milestone for the Mac ecosystem.” And as Marcelo is keen to stress, this is just the start. Sketch will continue to evolve, just like Apple’s new design language.&lt;/p&gt;

&lt;p&gt;“I’d like to take this moment to thank everyone involved internally in this redesign,” he concludes, reflecting on the process. “It was quite a challenge but I couldn’t be more proud of what our team achieved in such a short time.”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Sketch 70 is available now. You can get the update, read our release notes, check out our documentation, or just spend the next few hours gazing lovingly at those icons, which is what we’ve been doing for the last month or so. Let us know what you think of our redesign on social — we’d love to hear your thoughts.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Let us know what you think on Twitter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-70&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/11/18/a-big-sur-ui-refresh-new-ways-to-manage-data-and-improved-grids-what-s-new-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/11/18/a-big-sur-ui-refresh-new-ways-to-manage-data-and-improved-grids-what-s-new-in-sketch/"/>
    <title>A Big Sur UI refresh, new ways to manage Data and improved grids — what’s new in Sketch?</title>
    <summary>With this release, we’re introducing a new look to fit in with macOS Big Sur’s design language, plus some other helpful improvements </summary><published>2020-11-18T09:00:59+00:00</published>
    <updated>2020-11-18T09:00:59+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;strong&gt;Sketch 70 is out now.&lt;/strong&gt; The latest update to the Mac app introduces a UI refresh that fits right in with macOS Big Sur’s design language. It’s the same Sketch you know and love, but with every detail reconsidered — from a full-height sidebar and a refreshed Inspector, to all-new iconography throughout the app. You can find out more about the redesign &lt;a href=&quot;/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover&quot; title=&quot;Yes Sur: Behind the scenes of Sketch’s macOS makeover&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you can’t upgrade to Big Sur just yet, don’t worry. We’ve spent time making sure that things still look and feel great in older versions of macOS.&lt;/p&gt;

&lt;p&gt;With this release, we’ve also optimized the Mac app for Apple’s powerful new M1 chips. This means you’re ready to tap into the potential of Apple Silicon, which makes working in Sketch feel faster than ever.&lt;/p&gt;

&lt;p&gt;Elsewhere, you’ll find a new option to insert Data sources as new layers from the Insert menu, a new Data button that helps you refresh a selected layer’s data, and a quicker, easier way to repeat layers in grids.&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/11/18/yes-sur-behind-the-scenes-of-sketchs-macos-makeover&quot;&gt;Read more about the redesign&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-70&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/11/11/comment-threads-color-variables-support-and-trash-whats-new-in-cloud/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/11/11/comment-threads-color-variables-support-and-trash-whats-new-in-cloud/"/>
    <title>Comment threads, Color Variables support, and a safety net for deleted documents — What's new in Cloud?</title>
    <summary>Introducing a small set of Cloud updates that add up to even better collaboration in the browser</summary><published>2020-11-11T09:00:21+00:00</published>
    <updated>2020-11-11T09:00:21+00:00</updated>
    
    <content type="html">
      &lt;p&gt;This year, we’ve been working hard to make Cloud an incredible place to collaborate. We kicked off by &lt;a href=&quot;https://www.sketch.com/blog/2020/01/29/introducing-cloud-inspector-free-developer-handoff-in-the-browser/&quot;&gt;launching Cloud Inspector&lt;/a&gt; in January and &lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#how-to-export-individual-assets&quot;&gt;individual asset exports&lt;/a&gt; in June, bringing free developer handoff in the browser to anyone, on any operating system. We’ve also been doing a lot of underlying work, including a major database upgrade, that paves the way for some exciting future updates.&lt;/p&gt;

&lt;p&gt;Alongside some of the bigger updates and changes, we’ve focused on the small things, and rolled out a handful of updates that all add up to an easier, more delightful Cloud experience. Here’s what’s new in Cloud.&lt;/p&gt;

&lt;h2 id=&quot;seamless-transition-from-your-browser-to-the-mac-app&quot;&gt;Seamless transition from your browser to the Mac app&lt;/h2&gt;

&lt;p&gt;We want to make the transition between collaborating in Cloud and creating incredible work in the Mac app as seamless as possible. That’s why we’ve made it easy to &lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#how-to-open-cloud-documents&quot;&gt;see all your Cloud documents right from the Documents window&lt;/a&gt; on the Mac app. With this update, we’ve flipped things around and made it easier to open documents in the Mac app right from Cloud in your web browser.&lt;/p&gt;

&lt;p&gt;Opening documents in the Mac app from Cloud is easy. Simply click the &lt;strong&gt;Open in Sketch&lt;/strong&gt; button at the bottom of the sidebar in any document’s overview.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/cloud-open-in-sketch@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/cloud-open-in-sketch@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;You’ll also find the Open in Sketch option by hovering over any document’s thumbnail in the main documents view and clicking on the … button.&lt;/p&gt;

&lt;p&gt;Or, if you’re in a single Artboard, you’ll see a new icon to the right of the zoom controls to open your document focused on that Artboard in the Mac app.&lt;/p&gt;

&lt;h2 id=&quot;better-control-of-your-version-history&quot;&gt;Better control of your version history&lt;/h2&gt;

&lt;p&gt;With Cloud, you get &lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#how-to-use-versioning-with-cloud-documents&quot;&gt;a full version history&lt;/a&gt; of your documents that you can easily review and even roll back to, at any time. When you hit Save on a Cloud doc, you’ll create a new version, adding to the timeline in the sidebar you’ll see when you view that document in your web browser.&lt;/p&gt;

&lt;p&gt;That said, when you’ve been working on a project for a while, that number of versions can become pretty big. Not every version is helpful to have around –– especially older iterations of ideas you don’t want anyone else to accidentally end up using or referring to.&lt;/p&gt;

&lt;p&gt;With that in mind, we’ve added the option to delete versions of your Cloud Documents. All you need to do is open your document in the browser, hover over the version you want to delete in the sidebar, click &lt;strong&gt;…&lt;/strong&gt; and choose &lt;strong&gt;Delete Version&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/cloud-delete-versions@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/cloud-delete-versions@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;h2 id=&quot;a-safety-net-for-deleted-documents&quot;&gt;A safety net for deleted documents&lt;/h2&gt;

&lt;p&gt;Not had your morning coffee? Accidentally deleted that Library document your team all rely on? We’ve all been there. And don’t worry, we’ve got your back!&lt;/p&gt;

&lt;p&gt;We’ve recently introduced a new Trash feature to Cloud. Now, rather than deleting your documents permanently right away, you’ll send them to the Trash.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/cloud-trash@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/cloud-trash@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;To restore any document in Trash, all you’ll need to do is click on the document’s preview and choose &lt;strong&gt;Restore&lt;/strong&gt;. You can also hover over the document’s preview in the Trash, click … and select &lt;strong&gt;Restore document&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Documents will stay in the trash for up to 90 days. After that we’ll automatically delete them permanently. For more on deleting and restoring documents, &lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#how-to-delete-cloud-documents&quot;&gt;read our documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;support-for-color-variables-in-cloud-inspector&quot;&gt;Support for Color Variables in Cloud Inspector&lt;/h2&gt;

&lt;p&gt;In version 69 of the Mac app, we introduced &lt;a href=&quot;https://www.sketch.com/blog/2020/10/15/how-to-make-the-most-of-color-variables/&quot;&gt;Color Variables&lt;/a&gt;. Now, Cloud Inspector supports them as well, making it incredibly simple for anyone to copy the color value and variable name for any Color Variable in their document, in whatever format they might need it –– making developer handoff a breeze. To copy a Color Variable’s name and hex value to your clipboard, all you have to do is hover over it and click the copy icon that appears next to it.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-vars-in-cloud@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-vars-in-cloud@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Need a specific format like Obj-C or Swift? That’s easy as well. Just click on the name of that Color Variable and hover over the value that appears. From there, click on the arrow that appears to change to your desired format, and click the Copy icon.&lt;/p&gt;

&lt;h2 id=&quot;more-organized-conversations&quot;&gt;More organized conversations&lt;/h2&gt;

&lt;p&gt;When you’re discussing the finer points of a design, conversations can move quickly, making it difficult to keep track of specific discussions and details — especially if you’re all chatting in single stream of comments.&lt;/p&gt;

&lt;p&gt;Previously, we introduced mentions to specifically call out a person and send them a notification. Now, we’ve (literally) taken it one level further with threads. Threads are great for keeping conversations organized. For example, you can start a thread to focus specifically on the shape of a button, while the conversation continues elsewhere about the color scheme or copy, making your activity feed easy to scan and find what you need.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/cloud-threading-starting-thread@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/cloud-threading-starting-thread@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;To start a thread, click the reply link underneath it the comment you’d like to start one on, type your comment and press &lt;strong&gt;⌘+Enter&lt;/strong&gt; to post it.&lt;/p&gt;

&lt;h2 id=&quot;a-better-way-to-manage-notifications&quot;&gt;A better way to manage notifications&lt;/h2&gt;

&lt;p&gt;Along with threads, we also took the time to rethink the notifications you receive about new comments on Cloud documents. Previously, your notification options were limited to a document level. This can be helpful, but when you’re working on a large document with a lot of people, getting notifications for every comment can be overwhelming.&lt;/p&gt;

&lt;p&gt;Now, you’ll have the option to subscribe to notifications not just on the document level, but for specific threads and even Artboards (or groups of Artboards) as well. So, you’ll be able to tune into the conversations you’re directly involved in, and cut out the noise whenever it makes sense.&lt;/p&gt;

&lt;p&gt;To receive notifications for a specific Artboard, choose &lt;strong&gt;Follow this Artboard&lt;/strong&gt; from the drop-down menu in the sidebar in a single Artboard view.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/cloud-threading-stop-following@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/cloud-threading-stop-following@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Notifications for specific threads works exactly the same. Click on the &lt;strong&gt;X Replies&lt;/strong&gt; link a comment to see the Thread, then click on the &lt;strong&gt;Follow this Thread&lt;/strong&gt; option in the drop-down menu.&lt;/p&gt;

&lt;p&gt;For more on managing notifications in Cloud, make sure to &lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#how-to-manage-comment-notifications&quot;&gt;read our documentation&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;These updates are all live in Cloud right now, and we hope they make collaborating on designs even easier. We always appreciate your feedback, so if you run into any issues or have any questions, please get in touch. Oh, and make sure to stay tuned for some more exciting Cloud updates coming your way soon!&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/sketch-cloud/#cloud-documents-basics&quot;&gt;Read the documentation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/10/26/part-of-your-world-why-we-re-proud-to-build-a-truly-native-mac-app/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/10/26/part-of-your-world-why-we-re-proud-to-build-a-truly-native-mac-app/"/>
    <title>Part of your world: Why we’re proud to build a truly native Mac app</title>
    <summary>From personalization and performance, to familiarity and flexibility — there are plenty of reasons to love native apps</summary><published>2020-10-26T08:00:00+00:00</published>
    <updated>2020-10-26T08:00:00+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;Ten years after the first release of Sketch&lt;/span&gt;, a lot has changed. The design tools space has grown. Our amazing community has, too. Even macOS itself has evolved. But one thing has remained the same: our love for developing a truly native Mac app.&lt;/p&gt;

&lt;p&gt;Native apps bring so many benefits — from personalization and performance to familiarity and flexibility. And while we’re always working hard to make Cloud an amazing space to collaborate, we still believe the Mac is the perfect place to let your ideas and imagination flourish.&lt;/p&gt;

&lt;p&gt;In this post, we thought we’d highlight just a few of the benefits that come with native macOS apps.&lt;/p&gt;

&lt;h2 id=&quot;its-the-things-you-see&quot;&gt;It’s the things you see…&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;When you use a truly native app,&lt;/span&gt; you get all the benefits that come as standard with the platform — and for macOS, there are plenty! You can work across multiple windows, or in multiple tabs. You can manage your own local files in Finder, and browse back through previous versions saved on your Mac’s built-in storage. Then there’s Time Machine, which helps you keep a full history of your local files in case you want to revert to a much older layout, grab an important Symbol you accidentally deleted months ago, or just keep a full backup of all your work from v1.0 to your finished file.&lt;/p&gt;

&lt;p&gt;Then there are the built-in customization options. Want to tweak a shortcut for a tool you use regularly, or add a new shortcut entirely? Take advantage of macOS’ custom keyboard shortcuts and create your own from System Preferences — putting your favorite Sketch features at your fingertips. Plus, it’s easy to completely customize your toolbar with a Ctrl-click, just like you would in Finder or Mail. Learn the method once and it’s easy to put the tools you need the most easily within reach. When it comes to personalizing your app to suit your workflow and preferences, native apps have the controls you need.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/customize-toolbar@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/customize-toolbar@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;We think the best way to design is in a truly native application, built beautifully — and made for macOS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Best of all, native Mac apps like ours are designed to fit with the rest of the operating system. It’s hard to quantify, but if you use Apple’s built-in apps you immediately get a ‘feel’ for how things should work in native apps. When an app ‘fits in’ with the rest of the OS, it doesn’t just look and feel more at home on your Mac — it lowers the learning curve when you first open it. That’s why we (and plenty of other great macOS developers) work hard to follow the conventions set out in Apple’s Human Interface Guidelines, so that our Mac app has that same, familiar feel. And you can start using it instantly, from the first click.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn.sketchapp.com/uploads/dark-mode.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This is something we pride ourselves on — over the years we’ve taken design cues from Apple, working hard to make your experience feel consistent and natural whenever you switch from our Mac app to apps like Pages or Keynote. We support UI changes, such as Dark Mode, as they launch. And right now we’re putting the finishing touches to a major UI update so that our Mac app will still look perfectly at home when macOS Big Sur releases later this Fall.&lt;/p&gt;

&lt;h2 id=&quot;and-the-ones-you-dont&quot;&gt;…and the ones you don’t.&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;Of course,&lt;/span&gt; for all the obvious features that you can see and use every day, there are dozens more that help make native Mac apps better to use. You may not always know about them, but these behind-the-scenes benefits are one of the biggest reason we continue to champion a truly native app.&lt;/p&gt;

&lt;p&gt;It starts with native macOS technologies. Building our app with the likes of Metal and Swift makes a big difference to things like rendering, performance and our memory footprint, too. And we’re continuing to improve things in both of these areas — the updates we made &lt;a href=&quot;https://www.sketch.com/blog/2020/07/14/speeding-up-sketch-67/&quot;&gt;with version 67&lt;/a&gt; are one example.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Native Mac apps can offer a better user experience by building on top of Apple’s tried and tested frameworks, improving everything from battery life to accessibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a native app, we can easily support OpenType font features and P3 color profiles (because Apple does), so your designs look their best. Plus, our Mac app works with OS extensions and actions, like the ability to look up words or search with Google with a Ctrl-click — without needing any workarounds.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/system-actions@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/system-actions@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Plus, one of the biggest benefits is the option to use your native apps anywhere — even when you don’t have an internet connection. We’ll still need you to go online to confirm your license, but once that check is complete you can jump onto a long-haul flight, hike up a mountain or just switch off Wi-Fi on your Mac and keep designing in Sketch until long after the sun goes down.&lt;/p&gt;

&lt;p&gt;This isn’t just about us, though. Every native Mac app can offer a better user experience by building on top of Apple’s tried and tested frameworks, giving you everything from better performance and improved battery life to world-class accessibility.&lt;/p&gt;

&lt;h2 id=&quot;it-all-comes-down-to-choice&quot;&gt;It all comes down to choice.&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;For us, the ultimate benefit&lt;/span&gt; of being a native macOS app is that it puts the choice in your hands. Like we said above, we’re always working hard to make Cloud a great place to collaborate, but if you need to work locally in a native application on your own Mac, you always have the option. And if you prefer to store your design files on your Mac’s hard drive, a shared file server or an enterprise Box setup, you can.&lt;/p&gt;

&lt;p&gt;The same goes for backups. Of course we’ll keep your files safe and secure if you store them in Cloud, but you can always keep a local version too, if you want. Want to stay in control of which version of Sketch you’re working with? We get it, sometimes you don’t want to update your tools close to a deadline — we do the same with Xcode &lt;span class=&quot;chicago&quot;&gt;;-)&lt;/span&gt;. Just stick with your current version until you’re ready to update. The moment you’re ready, you’ll get all the performance improvements and latest features (like &lt;a href=&quot;https://www.sketch.com/blog/2020/10/06/color-variables-components-view-and-a-new-insert-window-what-s-new-in-sketch/&quot;&gt;Color Variables&lt;/a&gt; and &lt;a href=&quot;https://www.sketch.com/collab/&quot;&gt;real-time collaboration&lt;/a&gt; — which is coming soon) that each new release brings.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We want to give you the best of all worlds. The latest features delivered directly to a native Mac app, with all the functional benefits that brings. The ability to choose how and where you work. The option to share your work and handoff to others in Cloud. And soon, the ability to collaborate in real-time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ultimately, the choice is in your hands. We want to give you the best of all worlds. The latest features in a native Mac app, with all the functional benefits that brings. The ability to choose how and where you work. The option to share your work and handoff to others in Cloud. And soon, the ability to collaborate in real-time.&lt;/p&gt;

&lt;p&gt;We simply couldn’t do this without being a native Mac app. macOS is an amazing platform to work on, and we’re grateful to the community of designers like you that use Macs every day to create amazing work. Thank you for supporting us, and all the other native apps that help make the Mac the platform it is today. And thank you, Apple, for giving us a place to call home.&lt;/p&gt;


    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/10/22/from-one-to-one-million/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/10/22/from-one-to-one-million/"/>
    <title>From one to one million: how we grew Sketch around our incredible community</title>
    <summary>To celebrate our tenth anniversary, we chatted to some of the Sketch team about how we grew to reach an amazing milestone</summary><published>2020-10-22T00:00:04+00:00</published>
    <updated>2020-10-22T00:00:04+00:00</updated>
    
    <content type="html">
      &lt;p&gt;“Ten years ago there wasn’t a tool that defined standards when it comes to designing user interfaces,” explains Sketch’s co-founder and Chief Design Officer, Emanuel Sá. “We wanted a way to explain to people that interface design is not an afterthought. It is part of a huge process — but it’s not a small part. It needs to be well-done and understood by everyone involved. And most importantly it needs to be useable by everyone in the team. That was the goal with Sketch.”&lt;/p&gt;

&lt;p&gt;Back in 2010, &lt;a href=&quot;https://www.sketch.com/blog/2020/09/22/a-decade-in-design-with-emanuel-sa/&quot;&gt;the design landscape looked very different&lt;/a&gt;. Skeuomorphism was the hot trend. Sharing platforms like Dribbble and Instagram didn’t exist yet. And design software simply wasn’t as accessible as it is today.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We wanted a way to explain to people that interface design is not an afterthought. It is part of a huge process — but it’s not a small part. That was the goal with Sketch.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A lot has changed since then. Now, with over one million customers, Sketch has become the go-to for designers and teams around the world. So we thought we’d talk to some of the people who’ve been involved from our earliest days to find out how we got to where we are today.&lt;/p&gt;

&lt;h2 id=&quot;the-early-days&quot;&gt;The early days&lt;/h2&gt;

&lt;p&gt;“The first versions of Sketch were built highly collaboratively,“ says Pieter Omvlee, Sketch’s co-founder and CEO. ”At first it was just Emanuel and me on design and development, but the lines were always blurry; we collaborated heavily and never had one side dictate what the other should do. As we’ve grown the team I think we’ve managed to keep that spirit. People with different expertise should work together and contribute so that we get to the best result.”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An image of the original Sketch user interface from version 1.0.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/original-sketch-ui.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The original Sketch release aimed to define standards across the design landscape. Ten years on, we’re still pushing boundaries.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;As people began to pick up on this approach and started using the Mac app, a community began to form. And this is where the success of Sketch really started. “Don’t ask me how that happened, I have no clue,” laughs Emanuel. “People just really loved it. I think the price, the technology, the freedom — it allowed a lot more people to look at design as real career. The right tool was available on the right platform. And we were so lucky to have a lot of people who kept pumping in resources; icon sets, interface sets, plugins and more.”&lt;/p&gt;

&lt;h2 id=&quot;forming-a-community&quot;&gt;Forming a Community&lt;/h2&gt;

&lt;p&gt;“The community has played a monumental role in shaping the design space and the tools we all work with,” says Galya Iliev, who started her Sketch journey in that community, before joining the company in 2015. She’s now our Head of Partnership Marketing and Commercial Opportunities, working closely with the community every day. “Designers loved the native feel of an app made specifically for UI and UX design.” As creatives began to use it in their day-to-day work, they shared their designs and thoughts on social media. Tutorials appeared on YouTube and designers started meeting up to talk about Sketch in more detail. It was incredible to watch, and the team were blown away by the support.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We were so lucky to have a lot of people who kept pumping in resources; icon sets, interface sets, plugins and more.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“I remember some of the first Sketch meetups in San Francisco, Paris, Mexico City, and Beijing — to name a few!” says Galya. “Our team members began to travel and attend events and had some amazing conversations with community members that sparked internal chats and, in some cases, great new feature releases.”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A montage of photos from various Sketch meetups around the world, including a photo of Sketch’s co-founder Pieter Omvlee speaking at an event.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/meetup-montage.jpeg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;A few shots from Sketch meetups around the world — including an appearance from Pieter.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;These conversations gave the team valuable feedback that they could use to make the app better for everyone. And when it didn’t make complete sense for them to dedicate time to developing a feature, the community stepped up — developing amazing extensions and integrations to cater to those specific needs. “When creating a tool like Sketch, you can easily get distracted with an infinite amount of potential features to add,” explains Ale Muñoz, our Developer Relations Manager (and a long-time plugin developer himself). ”To keep a laser-focus, it’s essential to say ‘no’ to many of those ideas. Extensions can cover the proverbial last mile of design workflows, while we concentrate on making Sketch a great tool for everyone.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The community has played a monumental role in shaping the design space and the tools we all work with. Designers loved the native feel of an app made specifically for UI and UX design.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While Ale is right, tracking feedback and suggestions from the people that use our Mac app every day is still an essential part of our workflow — and it helps us make Sketch better. “Customer feedback is a core part of how we think and evolve our product,” says Diana Ribeiro, our Customer Success Manager. “It sits at the center of everything we do and ripples across every department at Sketch. I feel really fortunate to have such a passionate and vocal user base, and it’s very important to us that our customers feel heard.”&lt;/p&gt;

&lt;p&gt;“I think our success stems from knowing when to add features people are asking for, when to add features they’ve never thought of, and when to to refuse to add features that don’t make sense,” adds Pieter.&lt;/p&gt;

&lt;h2 id=&quot;developing-an-ecosystem&quot;&gt;Developing an ecosystem&lt;/h2&gt;

&lt;p&gt;As Ale explains, though, that decision isn’t always easy. Sometimes, feature requests are sometimes a signal that we should be doing something better. “That creates a new set of challenges for us. We want to offer our customers the best tools, but we never want to alienate the developer community by ‘&lt;a href=&quot;https://en.wikipedia.org/wiki/Sherlock_(software)#Sherlocked_as_a_term&quot;&gt;Sherlocking&lt;/a&gt;’ successful plugins,” he says. “We try not to base our work on existing implementations, but sometimes it’s inevitable to come up with similar solutions. There are only so many ways to do some things.”&lt;/p&gt;

&lt;p&gt;Ultimately, though, it comes down to making sure everyone has exactly what they need to create their best work in Sketch — whether we build it or it comes from our amazing plugin community. “One of my most common answers when people ask me ‘does Sketch do this thing?’ is ‘no, but there’s a plugin for that’,” Ale smiles.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A photo from a meetup in Tokyo with almost 100 people watching a presentation.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/tokyo-meetup.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Sketch meetups aren’t just a great way for the community to build connections — they give people a chance to share their experience and knowledge.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;One reason for this wealth of plugins is the early decision to make Sketch‘s file format open. The team has always believed that your files are your own, and you should be able to do whatever you want with them — whether that’s writing dev tools, or using them in another app. That decision has given our fantastic community of designers and developers scope to help shape the platform — with their knowledge, as well as their extensions.&lt;/p&gt;

&lt;p&gt;“Sketch’s plugin architecture offered literally unlimited possibilities for developers,” Ale continues. “Back then, there wasn’t a lot of information available for plugin developers. So a very passionate, closely knit group of hackers gathered around small pools of knowledge like the Sketch-plugins mailing list. I remember being amazed by the work other plugin devs shared there.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Back then, there wasn’t a lot of information available for plugin developers. So a very passionate, closely knit group of hackers gathered around small pools of knowledge like the Sketch-plugins mailing list.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“The knowledge sharing has been so humbling to watch,” says Galya. “Designers from every walk of life — from individual designers to bigger product teams at Google, Facebook, Apple, and IBM — all created resources and integrations with Sketch. And when there‘s that kind of great synergy, there’s also a lot of collaboration.”&lt;/p&gt;

&lt;p&gt;From our perspective, it’s incredibly uplifting to see close-knit communities form around the world with a passion for great design at their core. It’s been incredible to see how our app has helped forge relationships and friendships around the globe.&lt;/p&gt;

&lt;h2 id=&quot;it-all-comes-down-to-you&quot;&gt;It all comes down to you&lt;/h2&gt;

&lt;p&gt;And so, in 2019, almost by accident, Sketch passed one million customers. “It passed by without us noticing,” smiles Pieter. “It was only looking back that we realized. It’s really not a milestone we were striving for or working towards. The goal has always been to build a better product and hope, or trust, that the rest would take care of itself.”&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A photo from a meetup in Manilla.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/manilla-meetup.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Without our community, we simply wouldn’t be where we are today. Your passion and dedication constantly inspires us to make Sketch better.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;But of course there are big benefits to having such a large, active and experienced community. “Over the years, I have witnessed a massive shift in how we relate and interact with our customers,” says Diana. “Looking back, our customer base isn’t just bigger — it’s matured, too. And that’s pushed us to refine and improve.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It’s an amazing feeling to see people with such diverse backgrounds and in so many different places use our product to build what they’re passionate about.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Diana‘s sentiment applies across every part of Sketch. We’ve grown along with you — whether you’re an individual designer or part of a larger team. And as we ask Emanuel to reflect on ten years of Sketch, the gratitude he feels is clear. “I feel honored and forever humble,” he says. “It’s a privilege to be able to work for this community.”&lt;/p&gt;

&lt;p&gt;Pieter shares that feeling. “We could have never imagined it,” he says. “We built Sketch because Emanuel needed it and we figured there’d be more people like him out there. It took off in a bigger way than we could have ever dreamt.”&lt;/p&gt;

&lt;p&gt;“It’s an amazing feeling to see people with such diverse backgrounds and in so many different places use our product to build what they’re passionate about.”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This is our second post celebrating ten years of Sketch. Take a look at our interview with Emanuel to hear his thoughts on the last ten years in design, and keep an eye out for more stories from 2010 in the coming months.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/09/22/a-decade-in-design-with-emanuel-sa/&quot;&gt;Read our interview with Emanuel&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us what you think on Twitter&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/10/15/how-to-make-the-most-of-color-variables/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/10/15/how-to-make-the-most-of-color-variables/"/>
    <title>How to make the most of Color Variables</title>
    <summary>Learn how to easily sync and manage colors across your designs — and update your existing documents to take advantage of this new Component type</summary><published>2020-10-15T08:00:42+00:00</published>
    <updated>2020-10-15T08:00:42+00:00</updated>
    
    <content type="html">
      &lt;p&gt;Whether you’re working on a single webpage or an entire design system, the colors you choose have a huge impact — from usability and accessibility, to brand identity and character. With version 69 of the Mac app, we introduced Color Variables — a new component type that makes it easy to sync and manage colors across your designs.&lt;/p&gt;

&lt;p&gt;In this post, we thought we’d share some tips and tricks to help you make the most of Color Variables, as well as some advice on how to adopt them in existing and older documents.&lt;/p&gt;

&lt;p&gt;If you’re reading about Color Variables for the first time, don’t worry, we’ll kick off with a quick recap. You can also find out more about them in our &lt;a href=&quot;https://www.sketch.com/docs/styling/#color-variables&quot;&gt;documentation.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;updating-colors-in-your-design-with-color-variables&quot;&gt;Updating colors in your design with Color Variables&lt;/h2&gt;

&lt;p&gt;Any changes you make to a Color Variable will automatically update across all the layers that use it. The same goes for Color Variables in Libraries. Any changes you make to them will appear as an update for all the documents that use it, too.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-edit-color-variable-inspector-blogpost@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-edit-color-variable-inspector-blogpost@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;In this example, Hydrate are changing the color of their Winter Bliss bottles from purple to blue. With Color Variables, they can update their product page with a single change.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;You can read more about how to create and edit Color Variables in our &lt;a href=&quot;https://www.sketch.com/docs/styling/#how-to-create-a-color-variable&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;organizing-your-color-variables&quot;&gt;Organizing your Color Variables&lt;/h2&gt;

&lt;p&gt;Keeping your Color Variables organized makes editing them a breeze and inserting them with Insert Window even faster. You can use the Components View to rename, group and edit them.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-organize-color-vars@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-organize-color-vars@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Find out more about the Components View and the Insert Window in our &lt;a href=&quot;https://www.sketch.com/docs/the-interface/#the-components-view&quot;&gt;documentation.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top tip:&lt;/strong&gt; When you’re starting a new document, instead of choosing placeholder colors at random, why not create them as Color Variables and apply them to all the layers that need them? That way, you can tweak that “inactive grey” until it’s just right and be sure every layer gets the update.&lt;/p&gt;

&lt;h2 id=&quot;moving-over-from-color-presets&quot;&gt;Moving over from Color Presets&lt;/h2&gt;

&lt;p&gt;Before Color Variables, you could store colors as Global or Document presets. Document presets were exclusive to a specific document. On the other hand, Global presets were available to any document you opened in your copy of the Mac app. However, any edits you made to presets would not sync up across your design.&lt;/p&gt;

&lt;p&gt;When you update to version 69, we’ll migrate your Global presets into Color Variables and create a Library for them. We’ll also number them so they stay in the same order they were as presets. You can edit or rename your migrated Global presets by heading to the Libraries tab in Preferences and double-clicking to open the “Migrated Global Colors” Library. Then, head to the Colors tab in the Components View and make your changes.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-edit-migrated-colors@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-edit-migrated-colors@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;As for Document colors, you will now find them as Color Variables within the document. Any gradient and image fills will still appear as Document or Global presets.&lt;/p&gt;

&lt;h2 id=&quot;working-with-layer-styles-and-color-variables&quot;&gt;Working with Layer Styles and Color Variables&lt;/h2&gt;

&lt;p&gt;Even though Color Variables and Layer Styles are two different types of Components, they can work hand in hand to make your life easier. You can use Color Variables to keep colors in your styles consistent and make updates to all of them with a single change.&lt;/p&gt;

&lt;p&gt;As a reminder, with &lt;a href=&quot;https://www.sketch.com/docs/styling/#layer-styles&quot;&gt;Layer Styles&lt;/a&gt;, you can store a set of styles and reuse them across different shape layers within your designs. Updating a Layer Style will update every layer that uses it. They’re are a great way to keep elements of your design consistent.&lt;/p&gt;

&lt;p&gt;If you have Layer Styles with properties that all use the same color, applying a Color Variable to them will making it easier to update that color across every style at the same time. This is especially useful for larger or more complex design systems, where you might be using brand colors that need to stay consistent and updating those colors across tens or even hundreds of styles could take a long time.&lt;/p&gt;

&lt;p&gt;The same approach also works with &lt;strong&gt;Text Styles.&lt;/strong&gt; You might have lots of different styles set up for various heading sizes, body copy and alignments. Using Color Variables across all of them makes it far easier to keep colors consistent and apply updates fast.&lt;/p&gt;

&lt;p&gt;For example, let’s say you have two Layer Styles and one Text Style:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Primary Style&lt;/code&gt;, which uses a blue fill&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Secondary Style&lt;/code&gt;, which uses that same blue, but as a border&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Secondary CTA&lt;/code&gt;, which uses the same blue as a text fill&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you create a Color Variable for that blue color and apply it across all the Layer and Text Styles, any change you make to that Color Variable will update across every Layer and Text Style that uses it automatically — saving you time and making sure everything is consistent.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-layer-styles-color-vars@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-layer-styles-color-vars@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;h2 id=&quot;working-with-color-variables-and-tints&quot;&gt;Working with Color Variables and Tints&lt;/h2&gt;

&lt;p&gt;Back in Sketch 64, we launched Tints — an easy way to apply a solid color to a entire Symbol or group of layers. Tints are ideal for things like icons or iOS-style tab bars that combine an icon with a text label. By setting up Tint overrides for Symbols, you can change them fly for Symbol instances. And with Color Variables, you can take things a step further.&lt;/p&gt;

&lt;p&gt;By setting up different Color Variables for different states, applying a single Color Variable to a Tint override becomes far easier than creating different Layer Style and Text Style overrides that you’ll need to keep up to date and change whenever a specific state color changes.&lt;/p&gt;

&lt;p&gt;Take a look at this iOS tab bar as an example. By grouping the icon and the label together, applying a Tint, and making it a Symbol, we can use different Color Variables as Tint overrides to show inactive and active states.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-tint@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-tint@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;h2 id=&quot;migrating-older-documents-to-color-variables&quot;&gt;Migrating older documents to Color Variables&lt;/h2&gt;

&lt;p&gt;When it comes to adopting Color Variables with older documents and design systems, we’ve tried to make this as easy as possible. We’ve added Color Variables controls to the Find and Replace Color sheet and we’ve built a plugin specifically to help make migration a breeze. Here’s how both can help.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Presets that are now Color Variables won’t automatically apply to the Layers that used them, but don’t worry, we’ve created a plugin to help with this — more on that later.&lt;/p&gt;

&lt;h3 id=&quot;color-variables-migrator&quot;&gt;&lt;strong&gt;Color Variables Migrator&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Our Color Variables Migrator plugin matches the color in a Style or Layer with a Color Variable, making it quick and easy to update Layer and Text Styles to use Color Variables. If you’re working with a large design systems with lots of Layer and Text Styles, this could save you a lot of time.&lt;/p&gt;

&lt;p&gt;If you were using document presets, we’ll automatically convert those into Color Variables so you can start using the plugin right away. If you were not using presets, you’ll need to create the Color Variables you need first and then run the plugin.&lt;/p&gt;

&lt;p&gt;Once you are ready, there are two options you can choose from — you can pick one or both. The first option will update every layer with matching Color Variables in the document while the second one will update every Layer or Text Style.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-migrator@2x.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Keep in mind that the plugin will only work in your current document so if you want to migrate shared Libraries, you’ll need to open them first.&lt;/p&gt;

&lt;p&gt;You can download the &lt;a href=&quot;https://www.sketch.com/extensions/plugins/color-variables-migrator/&quot;&gt;Color Variables Migrator&lt;/a&gt; from our Plugin directory.&lt;/p&gt;

&lt;h3 id=&quot;find-and-replace-color&quot;&gt;&lt;strong&gt;Find and Replace Color&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;We’ve updated the Find and Replace Color sheet to include Color Variables controls, making it easy to find colors and quickly replace them with Color Variables. It’s handy for quickly creating Color Variables from Layer Styles.&lt;/p&gt;

&lt;p&gt;To get started, head to &lt;strong&gt;Edit &amp;gt; Find &amp;amp; Replace Color&lt;/strong&gt; and select the color you want to replace in your document. Then, open the Color Popover next to “Replace with” &lt;strong&gt;and choose Create Color Variable to create a new one with the same values as the color you’re rplacing.&lt;/strong&gt; Your new Color Variable will automatically update any Layer or Text Styles that use it.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/color-variables-find-replace-color-vars@2x.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;You can use Find and Replace Color sheet to find similar colors in your design and replace them with a Color Variable. You can also use it to replace multiple opacities of the same color — just keep in mind that when you replace them with a Color Variable, it won’t preserve those opacities. You can read more in our &lt;a href=&quot;https://www.sketch.com/docs/styling/#how-to-find-and-replace-a-specific-color-or-color-variable&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;We hope you’ll enjoy using Color Variables in your designs. We’re always listening to your feedback, so if you have any questions or run into any issues, please&lt;/em&gt; &lt;a href=&quot;https://www.sketch.com/support/&quot;&gt;&lt;strong&gt;&lt;em&gt;get in touch&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;and let us know.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cCI90k68L2M&quot;&gt;Watch the video guide&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/10/06/color-variables-components-view-and-a-new-insert-window-what-s-new-in-sketch/&quot;&gt;Read the announcement post&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-69&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/styling/#color-variables&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/support/&quot;&gt;Support&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/10/06/color-variables-components-view-and-a-new-insert-window-what-s-new-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/10/06/color-variables-components-view-and-a-new-insert-window-what-s-new-in-sketch/"/>
    <title>Color Variables, Components View and a new Insert Window — what’s new in Sketch?</title>
    <summary>With our latest Mac app update, we’re excited to introduce three new features — Color Variables, Components View, and a new Insert Window — making Sketch an even better home for design systems.</summary><published>2020-10-06T00:00:54+00:00</published>
    <updated>2020-10-06T00:00:54+00:00</updated>
    
    <content type="html">
      &lt;p&gt;With this latest Mac app update, we’re introducing three features that we think you’re going to love. First, Color Variables — a long-requested feature and a foundational building block for any design system. Then, a new Components View — a proper home for your document’s local Symbols, Text Styles, Layer Styles and Color Variables. Finally, a new Insert Window that makes finding and inserting Components easier than ever.&lt;/p&gt;

&lt;h2 id=&quot;color-variables&quot;&gt;Color Variables&lt;/h2&gt;

&lt;p&gt;Whether you’re working on a one-off project, or managing a complex design system, keeping the colors you use consistent and up-to-date is important. And with Color Variables, we’ve made that a lot easier. They work exactly how you’d expect them to — you can apply them wherever you’d normally apply a solid color. And when you make a change to a Color Variable, you’ll see that update reflected automatically across every layer that uses it.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/color-vars@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/color-vars@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;You can create Color Variables right from the Color Popover. We’ve also introduced a menu to help you quickly access and apply existing Color Variables. You can edit them either from the Color Popover or from the new Components View.&lt;/p&gt;

&lt;p&gt;Color Variables replace solid color presets. When you open a document, we’ll automatically convert any existing solid color presets in it. Any global solid color presets will become their own local Library, available for every document that used them. If you want to edit them, simply open the Library document from the Libraries preference panel, like you would with any other Library.&lt;/p&gt;

&lt;p&gt;We’ve had plenty of requests for something like Color Variables over the years — and throughout development and testing we’ve found them to be incredibly useful. We hope you will, too! For more information, take a look at &lt;a href=&quot;/docs/styling/#color-variables&quot;&gt;the documentation&lt;/a&gt;. We’ve also put together &lt;a href=&quot;https://www.youtube.com/watch?v=cCI90k68L2M&quot;&gt;a short video to show you more&lt;/a&gt; and released a &lt;a href=&quot;/extensions/plugins/color-variables-migrator/&quot;&gt;Color Variables Migrator&lt;/a&gt; plugin to help with adopting Color Variables in your older documents.&lt;/p&gt;

&lt;h2 id=&quot;components-view-beta&quot;&gt;Components View (Beta)&lt;/h2&gt;

&lt;p&gt;Along with a whole new type of Component, this update also introduces a new home for them. The new Components View gives all of your document’s Symbols, Text Styles, Layer Styles and Color Variables the space they deserve.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/comps-view@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/comps-view@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Clicking on the Components View tab in the Toolbar will switch out the Canvas for a whole new view in your document’s window. There, you’ll see a grid with a preview of every Component in your document. From there, we’ve made it easy to organize them into groups, rename them, and even edit them in bulk using the controls in the Inspector. In other words, you no longer need to manually create a page full of text layers for the sole purposes of viewing and editing Text Styles.&lt;/p&gt;

&lt;p&gt;This new Components View is all about organizing and editing Components that are local to your current document. Components from other Libraries are (by design) read-only, so you won’t see those here. To view and edit those, you’ll need to open the Components View inside that Library’s Sketch document.&lt;/p&gt;

&lt;p&gt;Conceptually, the Components View has been a long time coming and we couldn’t wait any longer to share it with you. With that in mind, we’re launching it in Beta and we’ll bringing some additional improvements and polish to it over future updates. For now, though, you can &lt;a href=&quot;https://youtu.be/xRQVkiujlxo&quot;&gt;take a video tour&lt;/a&gt; of the Components View or read &lt;a href=&quot;/docs/the-interface/#the-components-view&quot;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;insert-window&quot;&gt;Insert Window&lt;/h2&gt;

&lt;p&gt;The new Components View makes it easy to keep your Components organized. And we thought inserting them should be just as easy, too. Our Insert toolbar menu does a great job of that, and in this release we’ve improved it with a search field that we previously introduced to the Symbol swapping and Overrides menus.&lt;/p&gt;

&lt;p&gt;But we knew we could improve this workflow even more. So in this release, we’re introducing the Insert Window. As the name suggests, the Insert Window is a separate window, built specifically for browsing and inserting Components — from your local document or any Library you have enabled.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/insert-window@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/insert-window@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;We’ve worked hard to make using this new Window fast. You can simply tap &lt;code&gt;C&lt;/code&gt; on your keyboard to open it, type to search for what you need, filter between Component types, or browse through specific Libraries and groups in the sidebar.&lt;/p&gt;

&lt;p&gt;When you find what you need, simply drag-and-drop it onto your Canvas. The window hides itself when you do this so you can see the entire Canvas, but you can also pin it to have it reappear automatically.&lt;/p&gt;

&lt;p&gt;We’ve also added a few nice drag-and-drop features — like the ability to drop a Text Style onto a text layer to apply it, as well as Layer Styles and Color Variables with other layer types. You can even drag Color Variables onto Color Wells in the Inspector, and Symbols onto overrides.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/insert-window-text-style@2x.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/insert-window-text-style@2x.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;For more information on the Insert Window, you can take a look at &lt;a href=&quot;/docs/the-interface/#the-insert-window&quot;&gt;the documentation&lt;/a&gt; or &lt;a href=&quot;https://youtu.be/vL2GbZoDxx4&quot;&gt;watch our video&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;more-updates-improvements-and-fixes&quot;&gt;More updates, improvements and fixes&lt;/h2&gt;

&lt;p&gt;Along with Color Variables, the Components View and Insert Window, version 69 of the Mac app also includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Smarter grids&lt;/strong&gt; — Re-ordering layers in grids, by dragging on their circular center handle, works in a more natural way. Layers will now shift around in way that avoids adding extra rows or columns.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A new name for Symbol masters&lt;/strong&gt; — As part of an industry-wide change with Figma and Adobe, we’ve renamed Symbol masters. We now refer to a Symbol master as a Symbol Source.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Offset Path improvements&lt;/strong&gt; — We’ve moved the Offset Path controls into the Inspector and now temporarily show you an outline of the original path to give you a sense of scale while you’re making adjustments.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Crash and bug fixes&lt;/strong&gt; — As always, we’ve squashed some pesky bugs and fixed some unexpected crashes.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Version 69 of the Mac app is available right now and we hope you’ll enjoy these latest updates. We always appreciate your feedback, so if you have questions or run into any issues, please get in touch. Meanwhile, keep an eye out for the next update which includes a nice UI refresh for macOS Big Sur. 😉&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLvazCLC2BRw9BYbehagZLBvRQCJ16GWmn&quot;&gt;Video guides&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-69&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/10/01/how-vidit-bhargava-designed-lookup-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/10/01/how-vidit-bhargava-designed-lookup-in-sketch/"/>
    <title>Speaking our language: How Vidit Bhargava designed LookUp in Sketch</title>
    <summary>We speak to the award-winning designer about his popular dictionary app, his creative process, and why Sketch is his go-to tool</summary><published>2020-10-01T08:43:51+00:00</published>
    <updated>2020-10-01T08:43:51+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;em&gt;Giving you the tools you need to create great work is what drives us to make Sketch better every day. And when we see the things that you create with Sketch, it inspires us to do even better. One of our goals is to highlight great design, so this week we chatted to&lt;/em&gt; &lt;a href=&quot;https://twitter.com/viditb&quot;&gt;&lt;em&gt;Vidit Bhargava&lt;/em&gt;&lt;/a&gt; &lt;em&gt;— the designer and developer of&lt;/em&gt; &lt;a href=&quot;https://apps.apple.com/us/app/lookup-english-dictionary/id872564448&quot;&gt;&lt;em&gt;LookUp&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, who appeared on Apple’s ‘20 under 20’ developer list in 2015.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;LookUp is an award-winning dictionary app for iOS, Mac and Apple Watch that encourages you to learn a new word every day. It uses beautiful, illustrated cards to help explain the meaning — and Vidit designs everything from the UI to each individual card in Sketch.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Can you tell us a little about where you started in app design, and when you started using Sketch?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I started designing when I was in high school. I designed and maintained an e-magazine for students to keep abreast with technology news and to catch up on trivia, and I took part in several inter-school web designing competitions. I really enjoyed the creative process behind organizing content, creating beautiful graphics, and making easy-to-navigate web pages.&lt;/p&gt;

&lt;p&gt;I am also a long time Apple fan, so I was extremely excited when the iPhone first came out. Its design was everything I loved about Apple products. Simple, beautiful and easy-to-use. I was instantly a fan of the device and its apps.&lt;/p&gt;

&lt;p&gt;When the iPhone SDK launched, I was very encouraged by the idea that I could build and ship something to thousands of people worldwide. My passion for web design quickly translated to app design.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I discovered Sketch through Twitter a few weeks before LookUp shipped. I don’t think I’ve ever used any other tool for creating interfaces since.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I started playing with Interface Builder in Xcode to create different layouts, but I gradually started using other design tools to iterate on my designs faster and work more on details. I’d spend hours meticulously designing different screens for the apps I wanted to bring to life. I didn’t program then, but my brother was a computer science major, so I’d often help him by creating mockups and assets for his college projects.&lt;/p&gt;

&lt;p&gt;At the time, my go-to tool for UI design was Photoshop, and while Photoshop is great at a lot of things, it’s not really designed for UI design. I started to feel the need for something more dedicated, and I discovered Sketch through Twitter a few weeks before LookUp shipped. I don’t think I’ve ever used any other tool for creating interfaces since.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who (or what) are your biggest design inspirations?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My biggest inspiration has been the iPhone and the designers who created the UI for it. The simplicity of the designs enables anyone to just pick up the devices and start using it. The iPhone’s ‘slide to unlock’ interface was so intuitive, my two-year-old nephew could use it. It’s that level of ease-of-use that I strive for as a designer.&lt;/p&gt;

&lt;p&gt;Imran Chaudhri, the designer who worked on ‘slide to unlock’ and hundreds of other interfaces on the iPhone and Mac is also someone whose work deeply inspires me. I am still amazed at just how those interfaces must have come to life. And Mark Kawano, too. His (now discontinued) app, &lt;a href=&quot;https://www.theverge.com/2014/9/17/6266453/storehouse-brings-its-beautiful-storytelling-app-to-iphone&quot;&gt;Storehouse&lt;/a&gt;, came out just as I was getting started in app design, and the fluidity of the interface, and the simplicity of the app was very inspiring.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Three iPhones, each one showing LookUp in a different way, including home screen widgets.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/lookup-ios-14.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Vidit has worked hard to make his app’s interface as simple as possible, and to stay close to Apple’s own high standards. His latest release adds widget functionality to the iPhone and iPad.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Currently, I just love using the &lt;a href=&quot;https://us.moleskine.com/moleskine-/apps/0302-2&quot;&gt;Moleskine&lt;/a&gt; apps. They’re designed by Bonobo Labs, and their designs are just &lt;em&gt;amazing&lt;/em&gt;. The sound design, the haptics, and the interactions are just phenomenal — they’ve created a truly modern iOS app experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did you get started with LookUp? Did you ever think it would be as popular and successful as it has been?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My brother and I used to share an 8GB iPod Touch back in 2012. I was in my final year at high school and was studying for my finals. When I studied, I’d often use a dictionary to learn and understand the meaning of various words, but dictionary apps at that time took up more than 200MB of storage, and were cluttered with a lot of features I didn’t need. Then I’d end up using Google, because I’d often want to look at an image to better understand the words.&lt;/p&gt;

&lt;p&gt;The experience of looking up a word on the iPod was antithetical to the experience of &lt;em&gt;using&lt;/em&gt; my iPod. I wanted a dictionary app that was as delightful and easy-to-use as the iPod and iOS itself. I wanted everything in a single search — without a lot of junk features. So the idea of Lookup was born.&lt;/p&gt;

&lt;p&gt;The last few years have definitely been more successful than I had ever hoped LookUp would be, and it’s been an iterative process with lots of learning on the fly. If you were to tell 18-year-old me that just a few years down the line this is what I’d be doing full time, I’d have laughed at the idea!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it that’s kept you coming back to Sketch over the years?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sketch pays just as much attention to detail and design as its users. It’s native, fast and is improving consistently. And it feels at home with the rest of the apps on the platform. That’s something I think is a deeply under-appreciated quality in productivity apps.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A couple of years ago, when I was redesigning the app, Sketch played an important role in creating a consistent experience. I relied on Symbols, Layer Styles and Text Styles to do that. Reusing Components also meant faster iterations. I was able to put together a system that I still use to help me design for LookUp quickly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;How important was design when you were creating the app, and how did Sketch help you create something you were happy with?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From its inception, design has been a core focus for LookUp. The idea was to create an app that solved the user’s needs, and provided what they were looking for in a clear, simple interface. And that’s stayed true for the app over the years.&lt;/p&gt;

&lt;p&gt;Every time there’s a major new feature to add to the app, I still find myself taking a step back and looking at the app from the perspective of a new user. Is there too much going on in the app? Is there too much explanation to do on first launch? How easy is it for the user to just get started without being overwhelmed by everything that’s on the screen?&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;An iPhone and an iPad showing the same Lookup screen, to show the scaleable UI.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/lookup-scaleable-ui.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;A lot of the design cues are taken directly from Apple — it’s easy to see why the app has been featured so many times on the App Store, and won so many awards.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Each new addition to the app is designed and prototyped rigorously. The design process involves a lot of iterations, on-device previews, programming a usable version of the feature and collecting feedback to make further changes to the design and functionality.&lt;/p&gt;

&lt;p&gt;Sketch has played a significant role in helping me design the app over the years. It’s easy to quickly jump in and draw an interface and iterate on it before launching Xcode and programming something.&lt;/p&gt;

&lt;p&gt;A couple of years ago, when I was redesigning the app, Sketch played an important role in creating a consistent experience. I relied on Symbols, Layer Styles and Text Styles to do that. Reusing Components also meant faster iterations. I was able to put together a system that I still use to help me design for LookUp quickly.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Every time there’s a major new feature to add to the app, I still find myself taking a step back and looking at the app from the perspective of a new user. Is there too much going on in the app? Is there too much explanation to do on first launch?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over the years I’ve also set up Sketch Plugins to pool in more realistic dummy data that closely mimics the app’s functionality instead of just using placeholder text.&lt;/p&gt;

&lt;p&gt;Another key area where Sketch has helped me immensely is LookUp’s Word of the Day images. Sketch is an unusual tool for such illustrations but the speed with which I can construct vector graphics on Sketch, and the ability to reuse shapes and objects has made it a perfect tool for creating the Word of the Day images for LookUp.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You mentioned plugins, there — which ones do you use the most in your workflow?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My current favorites include the &lt;a href=&quot;https://www.datapopulator.com/&quot;&gt;Data Populator Plugin&lt;/a&gt; by precious design studio, and the &lt;a href=&quot;https://www.rotato.xyz/&quot;&gt;Rotato&lt;/a&gt; and &lt;a href=&quot;https://www.vectary.com/sketch/&quot;&gt;Vectory&lt;/a&gt; plugins to quickly generate 3D graphics and showcase the designs in short videos.&lt;/p&gt;

&lt;p&gt;The Data Populator plugin is a great way of quickly populating mockups with real data. It can link to JSON files and with a little bit of modification, you can have mockups that use real-world data instead of random images and ‘lorem ipsum’.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did you find the process of adapting the iOS app to other devices?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LookUp started as an iPhone app that was specifically designed for the one screen size that the iPhone offered at the time. Over the years, as the number of screen sizes has increased, and as devices like iPads have embraced multi-window and split screen interfaces, it’s become imperative to think of apps as more fluid and adaptive interfaces instead of static screens of different sizes.&lt;/p&gt;

&lt;p&gt;But layouts are only one part of the story. Each platform has subtle nuances that need to be taken into consideration when designing an interface for that platform.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Four screenshots of LookUp, each from a different device, to show the differences between the Watch, iPhone, iPad and Mac versions.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/lookup-all-platforms.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Vidit knows each version of the app needs its own considerations — because users interact with their device in different ways.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;On the iPad, the app adopts a multi-column layout as opposed to the single column layout on a smaller device. But it also goes beyond that to create an interface that’s truly at home on the iPad.&lt;/p&gt;

&lt;p&gt;For example, on the iPhone LookUp presents a sheet-style presentation for adding words to a collection. On the iPad however, that presentation is changed to a popover. Making the interaction just as quick, without presenting a large sheet for a user to take action on.&lt;/p&gt;

&lt;p&gt;When designing for the Mac, the challenges were different. It was a paradigm shift from a touch-screen device to a point-and-click device. While the core functionality of the app was the same, each element was redone — keeping in mind that people would be using a trackpad or a mouse.&lt;/p&gt;

&lt;p&gt;For example, the iOS app relies on taps, progressive disclosures and navigation from one screen to the other. On the Mac, it’s just faster to have a split-screen flat navigation that eliminates big changes to the screen every time you click on something.&lt;/p&gt;

&lt;p&gt;People also have a strong mental model of what they expect from a Mac app. So it was also important to have an app that looked and worked like a Mac app and not an iOS app ported to the Mac.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Three Apple Watches, showing the different interactions you can have with LookUp on your wrist.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/lookup-watchos.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The Watch version of the app is designed for quick interactions to minimize distractions as much as possible.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;On the Apple Watch, LookUp’s priorities have been completely different. They’re all about glanceability and super fast interactions. No one likes to lift their wrists for more than a few seconds, let alone carrying out complex interactions on that small a screen, so I designed LookUp to be an app that you can use quickly in a distraction-free environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What advice would you give to young developers that are thinking about getting into app development and design?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When starting with app development, it’s too easy to get demotivated by initial failure or not being able to meet expectations on first launch. But what I’ve discovered is that the initial response to an app is a very small part of a much bigger journey. Constantly iterating, striving to be better and staying curious is what makes the process fun and rewarding.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This is the latest in our #MadeWithSketch series. If you have a project you’ve created in Sketch and want to share with us, let us know on our social channels.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?hashtags=MadeWithSketch&quot;&gt;Share your #MadeWithSketch project&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/09/23/supporting-design-communities/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/09/23/supporting-design-communities/"/>
    <title>Our new approach to supporting design communities</title>
    <summary>We're making some changes to give our community more support and flexibility</summary><published>2020-09-23T08:30:18+00:00</published>
    <updated>2020-09-23T08:30:18+00:00</updated>
    
    <content type="html">
      &lt;p&gt;At Sketch, we’re proud of our role in helping to grow and define the UI design tools space. And we’re happy to see it flourish and offer so much choice to designers. So now, we want to make sure our community program fully reflects this.&lt;/p&gt;

&lt;p&gt;2020 has been a challenge for all of us in many different forms. It’s pushed all of us to think outside of the box and consider different perspectives.&lt;/p&gt;

&lt;p&gt;Unity, equality and inclusivity were the themes that struck us the most. And with that in mind, we’re proud to announce some important changes to our community outreach efforts, creating something bigger than us that gives back to all designers out there.&lt;/p&gt;

&lt;p&gt;Starting late September, we are going to introduce changes to how we support design communities. This brand new approach will aim to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bring inclusivity by removing barriers and embracing competition in the space&lt;/li&gt;
  &lt;li&gt;Promote unity and help connect more designers to more communities&lt;/li&gt;
  &lt;li&gt;Most importantly, reward community leaders for their hard work and efforts, giving back more than ever!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post, we thought we’d share a brief overview of those changes, what they mean for wider design community and the reasons for our new approach.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;new-support-for-sketch-ambassadors&quot;&gt;New support for Sketch Ambassadors&lt;/h2&gt;

&lt;p&gt;We’ve had an Ambassador scheme since 2015, and since then, we’ve supported over 100 design community leaders and organizers on 5 continents. Since the beginning of 2020, we’ve been chatting with every single active Sketch Ambassador to find out how we can better support and give back to their communities. With our new approach, we want to extend our Sketch Ambassador program and establish partnerships with more communities out there.&lt;/p&gt;

&lt;p&gt;Every organization relies on different tools to carry out their work — including us! The design industry is one of the best examples of this — and we know from talking to our Ambassadors that their communities want to know about all of the tools available to them. It’s time to make sure our Ambassador program reflects this, and acknowledges our friends in the industry.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With our new approach, we want to extend our Sketch Ambassador program and establish partnerships with more communities out there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We’ll soon be changing the guidelines for our Ambassadors that require them to focus their events solely on our product. We want to support communities in discussing digital design related topics, regardless of what tools they’re talking about. If you’re a Sketch Ambassador, there’s no need to feel hesitant about relying on a single tool for support. As long as you are there for your community, we would like to be there for you!&lt;/p&gt;

&lt;p&gt;Community has always been at the heart of everything we do. And we want to be at the hearts of design communities around the world. Going forward, we will be support Ambassadors on a case by case basis with licenses to raffle, official Sketch swag, invitations to feature previews and more. You can &lt;a href=&quot;/community/for-ambassadors/&quot;&gt;head over here&lt;/a&gt; to check out the details of this program and become a Sketch Ambassador yourself.&lt;/p&gt;

&lt;h2 id=&quot;introducing-sketch-advocates&quot;&gt;Introducing Sketch Advocates&lt;/h2&gt;

&lt;p&gt;As well as updating our Sketch Ambassador program to better reflect our industry, we wanted to offer something extra special to the most dedicated ambassadors. We want to reward their relentless efforts and the way they wave the Sketch flag. So, we’ve decided to launch a brand new role: &lt;a href=&quot;/community/for-advocates/&quot;&gt;Sketch Advocates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We know that there are passionate, respected design community leaders out there. They care as much about their craft as they do sharing their knowledge and bringing people together. They enjoy the challenge of building a community and they hold the same values and beliefs as we do at Sketch. These are the people we hope will become Sketch Advocates.&lt;/p&gt;

&lt;p&gt;The Sketch Advocate role is open to the most valued members of our community. We want to help them in the amazing work they do and empower them as trustworthy design community leaders. We’ll be offering Sketch Advocates a whole package of support — ranging from personalized event materials, to training sessions and speaking opportunities. You can find detailed information on all of the perks, as well as eligibility requirements, here.&lt;/p&gt;

&lt;p&gt;We’re setting a high bar for the role of Sketch Advocate — to become one, you’ll need to be both a true leader in your local design community and incredibly passionate about Sketch. For the initial launch of the role, we will be limiting Sketch Advocates to one per country and 20 in total, aiming for an even geographic distribution. Over time, we’ll continue to bring on more Advocates, but we want to make sure we can support everyone in the best way possible.&lt;/p&gt;

&lt;p&gt;If you think you have what it takes, apply through &lt;a href=&quot;https://forms.gle/QDtC62niKyTBeUNE8&quot;&gt;our form&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;moving-forward-together-and-stronger&quot;&gt;Moving forward, together and stronger&lt;/h2&gt;

&lt;p&gt;With these updates, we’re excited to be supporting more digital design communities out there, regardless of their tool preferences. Letting community leaders take the charge when it comes to topics, visuals and naming, we want to be more welcoming than ever.&lt;/p&gt;

&lt;p&gt;On the other hand, the new Sketch Advocate role rewards design community leaders who are truly passionate about Sketch, and have supported us and their communities on a higher level.&lt;/p&gt;

&lt;p&gt;We think this new approach treats all efforts fairly and allows more freedom and support for the communities that have made Sketch what is is today. We can’t wait to explore these brand new horizons with you!&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/community/for-advocates/&quot;&gt;Find out more about the Sketch Advocates program&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/community/for-ambassadors/&quot;&gt;Find out more about the Sketch Ambassador program&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/community/#meetups&quot;&gt;Upcoming Events&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/09/22/a-decade-in-design-with-emanuel-sa/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/09/22/a-decade-in-design-with-emanuel-sa/"/>
    <title>A decade in design — in conversation with Emanuel Sá</title>
    <summary>We talk Sketch, skeuomorphism and lucky breaks with our co-founder to celebrate ten years of Sketch</summary><published>2020-09-22T08:57:21+00:00</published>
    <updated>2020-09-22T08:57:21+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;em&gt;Sketch is 10! And to celebrate this pretty big anniversary, we’re putting together a series of blog posts looking back over the last decade and discussing the biggest trends, changes and developments — across both Sketch’s own history, and the design community as a whole.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To kick things off, we sat down with Emanuel Sá, Sketch’s co-founder and Chief Design Officer, to talk all things design over the last 10 years.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Okay, so let’s start at the beginning — how did you personally start with design, and what was the landscape like back then?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I had a background in photography, so I was quite familiar with Photoshop. But I was never satisfied with default stuff — give me a default OS and I’ll just change everything. I just don’t accept the status quo when it comes to visuals (laughs). So I started playing in Photoshop, and I soon understood: this is more than a photo editor, there are tools here that I can benefit from if I want to change other stuff.&lt;/p&gt;

&lt;p&gt;Eventually I got into iconography. It was interesting for me, because I could change everything on the user interface, but finding replacement icons that I liked wasn’t so easy. I pretty much had an idea of what I wanted, so I thought I might as well do it myself.&lt;/p&gt;

&lt;p&gt;Soon I moved on to designing themes for the Mac, and I would say that our MacThemes.net community from ten years ago has easily been the biggest influence on interface design in the last decade. Pretty much every single user in that forum has been a designer or leader on the most successful products of the last few years. I remember at the time that Chris [Downer, Sketch’s Product Owner] was, like, 17? Janik [Baumgartner, a designer at Sketch] was about 15, and he was already designing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I would say that our MacThemes.net community from ten years ago has easily been the biggest influence on design in the last decade. Pretty much every single user in that forum has been a design leader somewhere in a big company.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back then we were just doing fun stuff. But eventually the iPhone came out. Suddenly everyone got interested in doing apps for iOS, and they needed someone to help them with design. Where did they look? The MacThemes community. I would say there were five or six of us taking on the majority of the iOS landscape when it came to interface design and iconography back then.&lt;/p&gt;

&lt;p&gt;It was interesting because in the first two years it was basically accountants, lawyers, doctors, all wanting to make an app. They’d say, “I want a contacts app, but make it a spinning wheel. You know, like the one on Wheel of Fortune? I want one like that”. We’d say, “that’s not interface design, that’s illustration.” But back then it was huge, they wanted all those details — what we call skeuomorphism. They basically wanted to cram everything that was real into a screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sure, this was when&lt;/strong&gt; &lt;a href=&quot;https://www.interaction-design.org/literature/topics/skeuomorphism&quot;&gt;&lt;strong&gt;skeuomorphism&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;was at the peak of popularity. Do you think that came from a misunderstanding of what skeuomorphic design was meant to be?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeah. For some reason it was very interesting to people — minimizing huge things into very tiny spaces, often with odd perspectives. For a while, it was ‘the thing’, and to be honest I didn’t like it much. I definitely specialized in realistic designs, but I wasn’t a big fan of that particular sub-style, which then became a trend. I already had a very strong concept of trends, though, and I knew that was what people wanted at the time. So I figured I might as well get good at it if I wanted to keep freelancing.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A skeuomorphic icon showing a binder full of notes along with a ballpoint pen, designed by Emanuel&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/notepad-folder.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Emanuel opened up his archives after we chatted and found some old, unreleased icons — like this notes folder from around 2010.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;But the change to flat design in 2014? Honestly, that’s normal. Design trends are a loop. If you go back and study interface design from the 70s and 80s — and people need to understand there were interfaces back then as well, they just weren’t on devices that were accessible to the general public — it was exactly the same thing. IBM, Xerox, even Apple, they all had interfaces that went through this rotation of styles.&lt;/p&gt;

&lt;p&gt;Nowadays it’s Apple who sets the tone, and sometimes Google. That’s the way it is, and that’s fine. Flat is going to return again in eight or nine years, and we’ll be there to bring the best out of it. And I’m glad, because without change it gets boring. People need change. And we want people to keep wanting to change stuff — otherwise they don’t need Sketch. So that’s fine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As you say, skeuomorphism was a big part of the last decade — and that you learned a lot working in skeuomorphic design. How sad were you to see it go?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not sad at all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s really interesting, because it was your wheelhouse, it was your area of expertise, right?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, and it still is my comfortable zone. It’s where I know my work is going to be more consistent, at least. But I like a challenge. For me, if this is the language I need to speak, I will learn it.&lt;/p&gt;

&lt;p&gt;One thing that I said all the time is that I’m not an artist. I’m more of a visual engineer than an artist. I have rules to follow and I have to execute something useable. We should be creative, but mostly we should be mindful of constraints — and respect the interface guidelines we’re provided. I don’t have the freedom of an artist when it comes to designing software. So from that point of view, if skeuomorphism is what I must work with, that’s what I work with. If flat is what I need to work with, I will work with flat. A designer in the interface space is an engineer. And that’s great!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It feels like Sketch was perfectly timed, just as the trend started skewing back toward flat. Do you think Sketch helped the flat design movement pick up faster?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh yes, 100% sure. Because back then design was a closed group. It was meant for the chosen ones. The ones that were able to put up with Photoshop, and very specific tools that were not meant for design. Back then, Photoshop wasn’t a focused tool and it wanted to appear ‘only for professionals’. We wanted to take that feeling away with Sketch. It had to work for everyone.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Back then, Photoshop wasn’t a focused tool and it wanted to appear ‘only for professionals’. We wanted to take that feeling away with Sketch. It had to work for everyone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sketch totally changed the software approach — the approach to what an application should be for a user. And not just for designers, but on every single aspect. You should make your most important features the simplest and most obvious in your workflow. Back then, not many applications had that goal. I can only name a few, and most of them were from Panic.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A screenshot of the first Sketch interface from 2010.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/sketch-1.0-ui.jpg&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;You can still see plenty of echoes of the first Sketch UI in today’s releases, 10 years later.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Sketch also appeared around the time that Dribbble and Instagram launched. Do you think those communities helped spread the word as well? Was that a lucky break?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeah, I think the community — around Dribbble, the App Stores, and all that — all kickstarted that movement. And that’s amazing. I’m really thankful for that. We were able to expose an application to the masses, and Dribbble was able to expose design to the masses. Like I said, back then it was a ‘closed’ group of talented designers on a forum with limited visibility. Dribbble basically took that away — and then took over (laughs). It started as a gated community, but fortunately it soon opened up, it started to expose amazing new talents, and it was great.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We were able to expose an application to the masses, and Dribbble was able to expose good design to the masses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A lot of kids today who are excellent designers looked at people on Dribbble and wanted to be like them, because they could finally see that work in the public space.&lt;/p&gt;

&lt;p&gt;I mean, dude, we would release an icon set in the forums, and keep the icon set to ourselves — we wouldn’t share it with the world. It was the famous days of ‘not for release’ work. And that was very, very stupid (laughs). Dribbble took that away from everyone. So there were 10 designers in the market one year, and the next year there were 100. Now there are millions of designers, and that’s great. And it’s also more customers for us (laughs).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I know you don’t miss designing in skeuomorphic style, but are there any icons — things like drives and stuff — that you miss?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh yeah, those I do miss. That was interesting because those were very personal, you know? Those designs were personal for me. I remember doing some stuff that was not useable by today’s standards, but it was great to look at it. I remember spending nights making them.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Three illustrated macOS folders designed by Emanuel&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/zeu-icon-set.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Emanuel would design whole icon and folder sets to customize everything on his Mac, like this one from 2011.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;I look at some of&lt;/strong&gt; &lt;a href=&quot;https://dribbble.com/Emanuel&quot;&gt;&lt;strong&gt;your old work on Dribbble&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;and I just really miss this kind of stuff.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I do too! Because a system can work and still feel personal. It doesn’t have to be standardized for everyone. If you look at my folders, they’re custom (often the Ciment set, by &lt;a href=&quot;http://lbaumann.com/&quot;&gt;Laurent Baumann&lt;/a&gt;). If you look at my disk drives, they’re custom (&lt;a href=&quot;https://dribbble.com/shots/721476-Anstat&quot;&gt;Anstat&lt;/a&gt;, by &lt;a href=&quot;https://phlntn.com/&quot;&gt;Philip Antoni&lt;/a&gt;). I still feel the need to do these little things. I don’t know, it feels like mine, and it’s not so boring when I’m working. It doesn’t feel like I’m having a conversation with a machine, it feels like something more alive. Icons, for me, give me that.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you look at my folders, they’re custom. If you look at my disk drives, they’re custom. I still feel the need to do these little things. It doesn’t feel like I’m having a conversation with a machine, it feels like something more alive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Do you think that icons have lost some personality in the move to flat?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh for sure. Icons nowadays aren’t icons — they’re brand extensions. It’s that simple. And that sucks. But at the same time, our icon is a little bit of a brand extension. But I still think we managed to keep some personality. We did flatten it, but in a good way I think. At the same time we made an effort to make the diamond icon our brand — and what a brand it became!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So let’s talk about the Sketch icon.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeah, that’s a really interesting story. The diamond was never designed for Sketch to begin with. It was designed for another app that Pieter and I were developing, where you dropped images and they would resize them in batches, or apply a border in batches, stuff like that.&lt;/p&gt;

&lt;p&gt;After a few weeks of work, we realized the app was unnecessary. A year later we were working on Sketch and we needed an icon. I’d made the “hand grenade” (see the Sketch icon evolution animation below), and I didn’t like it, and Pieter didn’t like it either. I reminded Pieter about the diamond, because it was beautiful and I’d loved doing it. We knew it had nothing to do with Sketch, but we thought “why not?” And that was it. I wanted something very shiny and unique, that people could look at and think “I don’t know what this application does, but its icon is interesting, so I’ll click on it,” you know?&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;A blue version of the original Sketch 1.0 icon&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/sketch-blue.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;The original diamond — before it became Sketch’s icon — was blue.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;I wanted something very shiny and unique, that people could look at and think “I don’t know what this application does, but its icon is interesting, so I’ll click on it,” you know?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the Dock was beautiful back then. I don’t miss skeuomorphism when it comes to interfaces, but I do like &lt;a href=&quot;https://cdn.cultofmac.com/wp-content/uploads/2013/11/Dock-Shot.jpg&quot;&gt;a more dimensional Dock&lt;/a&gt;. It was beautiful, and at times there was art all over the place. I still have the Panic truck on my desktop right now. I don’t even use Transmit, man. I just like looking at it! (laughs) It’s that simple. It makes me happy to see that truck there, go figure.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Three version of the original Sketch diamond, in different colors.&quot; src=&quot;https://cdn.sketchapp.com/assets/blog/sketch-gem-colors.png&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;figcaption&gt;&lt;p&gt;Emanuel designed a range of different color options, thinking that each release may use a different color icon. In the end, after a couple of changes, we settled on our current color.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;That old 3D Dock was great, I miss that thing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Dock had a lot of non-shiny elements and I was like, “what’s bright, what reflects?” I always loved to play with reflections. Before that I’d worked on a folder set and everything was reflective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Talking of changing macOS designs, Big Sur feels like it’s starting to shift back away from flat design back towards skeuomorphism slightly. What do you think of that?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I don’t think it looks or works great right now — but they’re going to fix it, and it’s going to be nice. It is more skeuomorphic, though, and that’s nice. It’s an improvement over what skeuomorphic design was on macOS 10.9. It’s definitely an improvement — I like it, it’s full of good ideas.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/sketch-icon-evolution.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/sketch-icon-evolution.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;The Sketch icon has come a long way in the last 10 years — and it’ll be going even further soon.&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;It’s not about imitating a real interface, and more about depth. And I like that, I think that’s a good implementation. It’s like iOS. iOS 7 wasn’t great, but by iOS 10 it was excellent. It was well done, and well executed. It was flat, but it was well done.&lt;/p&gt;

&lt;p&gt;But for me, it’s not a new design language. It’s an evolution, and definitely a new standard. And that’s great — we’re going to follow, and improve on it. And they are going to copy us again (laughs).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This is the first post in our anniversary series looking back over the last 10 years of Sketch. You can expect more memories, highlights and interviews in the coming months. What version of Sketch was your first, and what are your memories of working with it? Let us know on our social channels.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Share your Sketch memories&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/09/02/blush-sketch-plugin/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/09/02/blush-sketch-plugin/"/>
    <title>Making us Blush: we talk inclusive illustrations with Pablo Stanley</title>
    <summary>“We see every screen as a canvas waiting for you to turn it into something beautiful.”</summary><published>2020-09-02T10:26:14+00:00</published>
    <updated>2020-09-02T10:26:14+00:00</updated>
    
    <content type="html">
      &lt;p&gt;“Our goal is to make art more accessible to all while championing illustrators and the importance of art in digital experiences,” explains Pablo Stanley from his San Francisco studio. We’re chatting with him — remotely, of course — about Blush, a new plugin that brings inclusive, custom illustrations into your Sketch designs.&lt;/p&gt;

&lt;p&gt;Pablo has been a big name in the design world for a while now, working hard to help others get the most out of Sketch. He became a &lt;a href=&quot;https://www.sketch.com/community/&quot;&gt;Sketch Ambassador&lt;/a&gt; in 2016, and since then he’s created inclusive illustration Libraries for everyone to use in Sketch — &lt;a href=&quot;https://avataaars.com/&quot;&gt;Avataaars&lt;/a&gt; and &lt;a href=&quot;https://www.humaaans.com/&quot;&gt;Humaaans&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;“With the power of Sketch Libraries and Symbols, all the components in each illustration were editable, so it was super fun and easy for designers to make their compositions,” he explains. He’s used that experience to co-found Blush, which combines his own illustrations with work from other artists, and brings in more complex systems for people to use across their designs. But despite officially being Blush’s CEO, he prefers to be called, simply, a ‘Doodler’. “To be honest, the term ‘CEO’ makes me feel a bit self-conscious, like I’m above others. We’re really a collaborative team that makes decisions as a group,” he says.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I’ve been a massive fan of Sketch plugins since day one — they amplify the things you can do as a designer, and you get to choose the superpowers that you want in your arsenal. The community has done a fantastic job, so we wanted to contribute with our own plugin.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With &lt;a href=&quot;https://blush.design/sketch&quot;&gt;Blush’s new Sketch plugin&lt;/a&gt;, Pablo and the rest of the team are continuing his mission to make art more accessible, and giving everyone a simple way to add beautiful illustrations to Sketch designs. “Blush is a tool that brings illustrations from artists around the world to everyone,” he explains. “The cool thing is that you can customize every piece of a doodle to create your own compositions!” As a result, you’ll always be able to find something that fits your design — and suits your audience. So everyone feels welcome.&lt;/p&gt;

&lt;p&gt;“Inclusion is embedded in Blush,” Pablo explains. “The illustrators who’ve created collections have made sure to include people with different backgrounds, abilities, and beliefs in their illustrations. So people can tell their stories with doodles that represent them or their audience.” To help with that goal, the plugin randomizes the components of your illustration when you create one from scratch, so you won’t ever see the same one twice.&lt;/p&gt;

&lt;p&gt;“We believe that this can help us avoid unconscious biases we might have when creating a character,” says Pablo. “You can still change any element to your liking — things like the hairstyle, upper body, lower body, skin color, and accessories.”&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/wally-onboarding-demo.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/wally-onboarding-demo.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;Illustrations by &lt;a href=&quot;https://blush.design/artists/irene-falgueras&quot;&gt;Irene Falgueras&lt;/a&gt;&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-power-of-personalization&quot;&gt;The power of personalization&lt;/h2&gt;

&lt;p&gt;Blush started life as a web app — which is still available, and great if you just want to grab a quick image while you experiment with your initial design ideas. But by building a native Sketch plugin, the Blush team have made it easier to browse and customize doodles right next to the Canvas and in the context of your designs.&lt;/p&gt;

&lt;p&gt;“Imagine improving your UI with pictures, creating a banner for your blog posts, bringing some flair to your slides, and adding some visuals to your graphs!” says Pablo. It’s as simple as opening the plugin, selecting a collection, choosing a picture, and customizing it to your liking. “The cool thing is that you can close your Sketch file, return the next day, and if you want to make an edit to your illustration, just open the plugin again, and you can keep editing!”&lt;/p&gt;

&lt;p&gt;Best of all, all the artwork has a worry-free license, so you can use it for personal or commercial purposes at no extra cost. It all comes back to the team’s desire to give more people access to great artwork for their designs. “We want to give everyone the ability to bring doodles into their creations,” Pablo enthuses. “We see every screen as a canvas waiting for you to turn it into something beautiful.” The result of their mission? Anyone can mix and match artwork from illustrators across the globe, without needing to worry about finding somewhere to put attribution — unless you want to, of course.&lt;/p&gt;

&lt;p&gt;For designers looking for even more control over the illustrations, there’s also a paid tier that gives you SVG versions (“the power of vectors!”), print-resolution PNGs and other advanced features. “Having SVGs gives you control over every layer of the doodle, which is perfect for creating custom artwork, changing specific colors, or making animations,” he says.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/blush-stuck-at-home.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/blush-stuck-at-home.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;p&gt;Illustrations by &lt;a href=&quot;https://blush.design/artists/mariana-gonzalez&quot;&gt;Mariana Gonzalez&lt;/a&gt;&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;And for Blush, this is just the start. “I can’t wait for people to see what we’ve got,” says Pablo. “Some of the new stuff we’re adding includes icons, individual illustration elements (rather than just compositions), and 3D objects.” The team has plans to add animation in future, too. “It’ll allow people to first mockup their design on Sketch, and export a &lt;a href=&quot;https://lottiefiles.com/what-is-lottie&quot;&gt;Lottie&lt;/a&gt; file or MP4 that they can use in the implementation.”&lt;/p&gt;

&lt;h2 id=&quot;giving-something-back&quot;&gt;Giving something back&lt;/h2&gt;

&lt;p&gt;Pablo’s previous projects — Humaaans, Peeps and more — have taken the form of Sketch Libraries, with multiple overrides for each illustration. The Blush plugin was a chance to bring them together in one place. Best of all, it was an opportunity for Pablo to give back to our community by making it easier for everyone to get beautiful custom artwork.&lt;/p&gt;

&lt;p&gt;“I’ve been a massive fan of Sketch plugins since day one — they amplify the things you can do as a designer, and you get to choose the superpowers that you want in your arsenal,” says Pablo. “The community has done a fantastic job, so we wanted to contribute with our own plugin.”&lt;/p&gt;

&lt;p&gt;But beyond giving something back, Pablo‘s passion for great artwork was a driving force for Blush. “We’ve had the chance to collaborate with illustrators we admire to create some stunning collections for our users,” he smiles. “You’ll find illustrations on everything from people, plants, and food to cityscapes and abstract art.&lt;/p&gt;

&lt;p&gt;“I feel lucky to be able to collaborate with such talented artists. Their work is the lifeblood of Blush. They have put so much love and care into every little pixel, every vector, and each brushstroke. It’s a gift for every creator who wants to tell their stories with doodles.”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You can download the Blush plugin from the Blush website, or create your own custom illustrations using the web app.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Header image illustrations by&lt;/em&gt; &lt;a href=&quot;https://blush.design/artists/vijay-verma&quot;&gt;&lt;em&gt;Vijay Verma&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://blush.design/sketch&quot;&gt;Download the Blush Plugin&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blush.design/collections&quot;&gt;Check out the web app&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us what you think&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/08/24/5-powerful-assistants-to-help-you-improve-your-projects/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/08/24/5-powerful-assistants-to-help-you-improve-your-projects/"/>
    <title>5 powerful Assistants to help you improve your projects</title>
    <summary>Install these third-party Assistants to keep your documents organized, accessible, and in sync with your design system</summary><published>2020-08-24T09:59:43+00:00</published>
    <updated>2020-08-24T09:59:43+00:00</updated>
    
    <content type="html">
      &lt;p&gt;We often talk about how our community makes Sketch better. Whether you’re a daily user submitting feature requests that help us make the Mac app even more powerful, or a developer building incredible extensions that improve things for everyone, it all makes a difference. So when we launched Assistants in version 68 with our community in mind, we knew you would support our vision for better design.&lt;/p&gt;

&lt;p&gt;We weren’t disappointed. Here, we’ve pulled together five of our favorite Assistants from the Sketch community — you can download them directly from this page, or find out more about them in &lt;a href=&quot;/extensions/assistants/&quot;&gt;our Assistants directory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don’t forget, with some JavaScript knowledge (or a frontend developer friend to team up with) you can also build your own Assistant that does exactly what you need. Find our more in &lt;a href=&quot;/blog/2020/08/11/introducing-assistants/&quot;&gt;our announcement post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For now, let’s take a look at some Assistants.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;accessibility&quot;&gt;Accessibility&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;By Yana Gevorgyan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/Accessibility.png&quot; alt=&quot;Accessibility Assistant Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/extensions/assistants/sketch-accessibility-assistant/&quot;&gt;Accessibility&lt;/a&gt;, from &lt;a href=&quot;https://cluse.cc/&quot;&gt;Cluse&lt;/a&gt; creator Yana Gevorgyan, has a set of rules that help you create more accessible designs. It’ll help you spot color contrast issues between shapes as well as text layers, so you can make everything easier to understand for the visually impaired. Pair it with the Cluse plugin and you’ll be able to easily correct everything using a simple, slick interface.&lt;/p&gt;

&lt;h2 id=&quot;organizer&quot;&gt;Organizer&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;By Todor Iliev with Dimitriy Bunin and Roman Banks&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/Organizer.png&quot; alt=&quot;Organizer Assistant Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you’re into the flow of designing, it’s easy to forget to delete empty groups, follow naming conventions or remove forgotten fills, shadows and borders. But for many design systems and workflows, keeping your files organized is essential. That’s why &lt;a href=&quot;/extensions/assistants/sketch-organizer-assistant/&quot;&gt;Organizer&lt;/a&gt; from &lt;a href=&quot;https://slice.design/organizer-assistant&quot;&gt;Slice&lt;/a&gt; is so useful. It’ll help you keep your files neat and tidy with prompts to reorganize the elements you need — and remove the ones you don’t.&lt;/p&gt;

&lt;h2 id=&quot;artboard-status--navigator&quot;&gt;Artboard Status &amp;amp; Navigator&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;By Francesco Bertocci&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/artboard-status-navigator.png&quot; alt=&quot;Artboard Status &amp;amp; Navigator Assistant Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/extensions/assistants/freeflow-assistant/&quot;&gt;Artboard Status &amp;amp; Navigator&lt;/a&gt; (from Sketch Ambassador and Design Advocate Francesco Bertocci) gives you a quick and easy way to organize your artboards and navigate to them fast using Assistant rules. Simply add an emoji to your Artboard name to show whether it’s work in progress, approved, ready for sign-off or ready for handoff, and the Assistant will gather them into categories for fast access. You can add custom strings to suit your own needs, too. Perfect for when your projects grow and the Layer List starts filling up.&lt;/p&gt;

&lt;h2 id=&quot;duplicates&quot;&gt;Duplicates&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;By oodesign&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/duplicates-assistant.png&quot; alt=&quot;Duplicates Assistant Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nobody likes clutter. &lt;a href=&quot;/extensions/assistants/duplicates-assistant/&quot;&gt;Duplicates&lt;/a&gt; fulfills a simple task that’s easy to forget when you’re finished with a design — reminding you to remove duplicate Symbols, Text Styles and Layer Styles. It’s a quick way to tidy up your document before review or handoff, and acts as a handy reminder to keep your document streamlined.&lt;/p&gt;

&lt;h2 id=&quot;sketch2react-conventions&quot;&gt;Sketch2React Conventions&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;By The Sketch2React team&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/sketch2react-assistant.png&quot; alt=&quot;Sketch2React Assistant Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For designers that use Sketch2React’s framework, this &lt;a href=&quot;/extensions/assistants/@sketch2react/sketch2react-assistant/&quot;&gt;Sketch2React Assistant&lt;/a&gt; is a must. It includes rules to help you stick to the framework, including page names, Artboard names, group names and more. This one is a specific use case, but it’ll be a huge help for those that need to stick carefully to &lt;a href=&quot;https://sketch2react.io/&quot;&gt;Sketch2React’s conventions&lt;/a&gt; — and saves you manually checking everything before you’re finished.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This is just a selection of the Assistants available right now — and there are more going live all the time. Keep an eye on our directory for more in the future. And if we missed an Assistant you love, let us know.&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/extensions/assistants/&quot;&gt;Find more Assistants&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Share your favorite Assistants&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/08/13/designing-a-video-game-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/08/13/designing-a-video-game-in-sketch/"/>
    <title>Designing a video game in Sketch: we talk to the team behind King Rabbit</title>
    <summary>“For puzzle games like King Rabbit, I think it’s imperative to make the art very clean and readable. Sketch can be a great solution."</summary><published>2020-08-13T07:00:00+00:00</published>
    <updated>2020-08-13T07:00:00+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;em&gt;While Sketch is a powerful tool for designing user interfaces, we’re always amazed by the different uses people find for it. So when we saw a Reddit post about&lt;/em&gt; &lt;a href=&quot;https://www.kingrabbit.co/&quot;&gt;&lt;em&gt;King Rabbit&lt;/em&gt;&lt;/a&gt; &lt;em&gt;— a game designed entirely in the Mac app — we were intrigued.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To find out more about the creation process for King Rabbit, we spoke to Brian Oppenlander, co-founder of&lt;/em&gt; &lt;a href=&quot;https://www.raresloth.com/&quot;&gt;&lt;em&gt;RareSloth&lt;/em&gt;&lt;/a&gt; &lt;em&gt;and designer on the title. Here’s the story of how he came to use Sketch to create every asset in the game.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;can-you-tell-us-a-bit-about-your-design-history&quot;&gt;Can you tell us a bit about your design history?&lt;/h2&gt;

&lt;p&gt;I have an MS in human-computer interaction &amp;amp; design &lt;a href=&quot;https://informatics.indiana.edu/programs/ms-hci.html&quot;&gt;from Indiana University&lt;/a&gt;, and after I graduated I worked for two years as an interaction designer on the user experience team at a massive healthcare software company. I never really envisioned myself making games.&lt;/p&gt;

&lt;p&gt;I made a friend, Austin, who’s a programmer — and he later became my business partner. We decided to make a mobile game, and it took us a year to complete it. After that we started on another game and eventually planned the transition to bootstrapping RareSloth and making games full-time.&lt;/p&gt;

&lt;p&gt;At the healthcare software company we used Adobe Fireworks and then later transitioned to using Sketch. So I have at least five years of experience using Sketch for UI design and games.&lt;/p&gt;

&lt;h2 id=&quot;its-fair-to-say-that-the-majority-of-game-designers-dont-use-sketch-to-create-their-assets-what-made-you-choose-sketch-as-your-tool&quot;&gt;It’s fair to say that the majority of game designers don’t use Sketch to create their assets. What made you choose Sketch as your tool?&lt;/h2&gt;

&lt;p&gt;Using Sketch is definitely unconventional! I’ve never met another person using Sketch for game development. But as you can see, it can be done — and I’m still enjoying it!&lt;/p&gt;

&lt;p&gt;For my first game I used Photoshop and a tablet to paint all the assets. That’s definitely more of a ‘normal’ tool for game art. But I still don’t consider myself a very good illustrator or painter, so I’m a lot more comfortable creating minimal vector art.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sketch was flexible enough for me to create my own ‘Character Creator’ system using Symbols.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On our second game I wanted to use a simple art style so I could be more consistent, faster, and be able to work more within my abilities. I started by making vector art with Illustrator, but then transitioned to Sketch.&lt;/p&gt;

&lt;p&gt;For puzzle games like &lt;a href=&quot;https://apps.apple.com/us/story/id1510823862&quot;&gt;King Rabbit&lt;/a&gt;, I think it’s imperative to make the art very clean and readable. A heavily-stylized puzzle game can quickly become visually distracting, which takes away from the puzzle experience and can potentially become overwhelming or frustrating.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/king_rabbit_gameplay.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/king_rabbit_gameplay.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;h2 id=&quot;how-did-the-process-of-designing-in-sketch-compare-to-using-illustrator-which-you-used-for-previous-games&quot;&gt;How did the process of designing in Sketch compare to using Illustrator, which you used for previous games?&lt;/h2&gt;

&lt;p&gt;Illustrator felt bloated, and the exporting process was convoluted and slow, which was a huge pain point for me. We have to export assets very frequently.&lt;/p&gt;

&lt;p&gt;Artboard and export management is superior in Sketch — it’s really important to be able to manage and export assets quickly and efficiently. Illustrator would also crash randomly, which I have rarely experienced with Sketch.&lt;/p&gt;

&lt;p&gt;I found the asset management and export flow with Sketch to be far better than Adobe’s products. Sketch always felt so much lighter to work with, and that made work so much more enjoyable and efficient.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Having the whole art pipeline contained within Sketch really streamlined things. There was less context-switching, and less time fumbling with multiple programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-simple-was-it-to-translate-your-sketch-designs-into-a-working-game&quot;&gt;How simple was it to translate your Sketch designs into a working game?&lt;/h2&gt;

&lt;p&gt;I think Sketch can be a great solution for 2D games. It was flexible enough for me to create my own ‘Character Creator’ system using Symbols. These individual body part pieces are Symbols that show a preview of the character in all the different perspectives that our game supports. In our case we wanted to create a lot of skins for King Rabbit, so we needed to re-use the animations. By using a template and previewing within Sketch, we can make sure everything already lines up perfectly before we export it to the animation software. In fact we don’t even have to open our animation software anymore — if the skin looks good in Sketch, it’s production ready.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/rabbit_creator_template.png&quot; alt=&quot;A screenshot showing Sketch Artboards containing different parts of a rabbit character model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Naming the Artboards with the export path makes it really quick to update assets in the game project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/sketch_crown.png&quot; alt=&quot;A screenshot showing a Sketch Artboard with a crown graphic. The Artboard is named using the export path&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also created a tileset creator system. Tilesets are a common requirement for top-down 2D games like King Rabbit. It was easy to set up a tileset template in Sketch that also shows a real-time preview to ensure everything is pixel perfect. We use our tileset template for the grounds, walls and paths.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/tileset_preview.png&quot; alt=&quot;A screenshot showing how different wall blocks fit together to create patterns in the game&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also use Sketch to design and preview your own repeating textures using a 9x9 grid of symbols. Here’s an example of a texture used for a dirt/stone wall.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/sketch_dirt.png&quot; alt=&quot;A screenshot showing two Sketch Artboards — one with a single tile of an illustrated dirt block, and the second showing how that single block can be tiled in a three-by-three grid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While there may be other tools that can do these things, having the whole art pipeline contained within one piece of software really streamlined things. There was less context-switching, and less time fumbling with multiple programs. Having everything (Colors, Styles, Symbols, UI elements and so on) in one place is so convenient.&lt;/p&gt;

&lt;h2 id=&quot;and-did-you-hit-any-issues-how-did-you-overcome-them&quot;&gt;And did you hit any issues? How did you overcome them?&lt;/h2&gt;

&lt;p&gt;When files started getting big with lots of Symbols, things started to slow down a little. I think this was caused by using a &lt;em&gt;ton&lt;/em&gt; of Symbols, and this seems to have been improved with Sketch 67. To overcome the issue and reduce memory demands, I split assets up into separate pages or files — UI, characters, tilesets, items, and so on.&lt;/p&gt;

&lt;h2&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/sketch_items.png&quot; alt=&quot;A screenshot showing 18 Sketch Artboards, each with a different kind of in-game item&quot; /&gt;&lt;/h2&gt;

&lt;h2 id=&quot;what-are-your-plans-for-the-future-of-king-rabbit-and-raresloth-will-sketch-be-a-part-of-them&quot;&gt;What are your plans for the future of King Rabbit (and RareSloth)? Will Sketch be a part of them?&lt;/h2&gt;

&lt;p&gt;Big plans! King Rabbit is a community-driven experience, where you can participate in shaping the experience for other players. Our players have built roughly 150,000 King Rabbit levels already, providing an almost infinite stream of content for free.&lt;/p&gt;

&lt;p&gt;In the next major update we’ll be adding the Rabbit Market, which lets players buy and sell rabbits directly from other players. Our skins are different from most games because they are limited to 100! We think making skins scarce is good for players because they retain their value. If you get tired of a skin, you can sell it for premium currency and buy a new one. This creates a dynamic end-game experience where players can compete to collect rabbits and show off their collection. Flipping rabbits for a profit is another meta-game for players to participate in. It will be interesting to see how it plays out.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We don’t even have to open our animation software anymore — if the skin looks good in Sketch, it’s production ready.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another thing we’re testing is letting designers and artists submit their own vector assets using Sketch. For example you could create a custom rabbit skin or tileset. Not only will designers get compensation for their contributions, they’ll also get recognition from the community.&lt;/p&gt;

&lt;p&gt;If designers are interested, they can sign up &lt;a href=&quot;http://www.kingrabbit.co&quot;&gt;on our website&lt;/a&gt; to get the character and tileset templates, which they can also use for their own projects.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/rabbit_skins.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/rabbit_skins.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;We do plan on making more games, but we want King Rabbit to continue to be a living game that we’re always improving and adding new content to. It’s a sandbox experience with a lot of potential to scale and evolve.&lt;/p&gt;

&lt;p&gt;Personally, I plan to continue using Sketch for our games. We have a nice library of assets that can be re-used or repurposed for future games, which will really help speed up development time.&lt;/p&gt;

&lt;h2 id=&quot;do-you-have-any-tricks-or-advice-that-youd-share-with-other-designers-considering-using-sketch-to-design-a-game&quot;&gt;Do you have any tricks or advice that you’d share with other designers considering using Sketch to design a game?&lt;/h2&gt;

&lt;p&gt;Start small and iterate! Scope is a skill to manage…&lt;/p&gt;

&lt;p&gt;I follow an expansion and contraction process. In the expansion stage, you allow yourself to be loose and creative. It’s usually a little chaotic. Then in contraction, you go back and get organized again, tighten things up. Repeat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/king_rabbit_screenshot.png&quot; alt=&quot;A screenshot of King Rabbit taken from someone playing the game on an iPad Pro&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you’re always in a contraction mode, you might be over optimizing and being too much of a perfectionist. There’s a lot of pressure on designers to create pixel-perfect work. Over optimization is a trap I fell into with some of the game art — trying to make everything pixel perfect and consistent can really slow you down and limit you. This depends on what kind of work you’re doing and your constraints, of course.&lt;/p&gt;

&lt;p&gt;I think one of the traps indie game devs fall into is going too high-fidelity, to the point where everything takes too long and the game never gets finished. It’s important to be efficient with time, and Sketch helped me keep things simple.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;You can download King Rabbit for free on&lt;/em&gt; &lt;a href=&quot;https://apps.apple.com/us/app/king-rabbit/id1440480754&quot;&gt;&lt;em&gt;iOS&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.raresloth.android.kr2&amp;amp;hl=en&quot;&gt;&lt;em&gt;Android&lt;/em&gt;&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;https://store.steampowered.com/app/852340/King_Rabbit/&quot;&gt;&lt;em&gt;Steam&lt;/em&gt;&lt;/a&gt; &lt;em&gt;to see the #MadeWithSketch artwork in all its animated, interactive glory. It’s great fun.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Have you used Sketch to draw detailed architectural blueprints? To create an animated cartoon series? Or something even more impressive? Let us know on Twitter — we’d love to tell your story.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.kingrabbit.co/&quot;&gt;Find out more about King Rabbit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?hashtags=#MadeWithSketch&quot;&gt;Tell us about your #MadeWithSketch project&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/08/11/sketch-68-is-out-now/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/08/11/sketch-68-is-out-now/"/>
    <title>Sketch 68 is out now</title>
    <summary>Introducing Assistants, plus better document management for Cloud — what's new in Sketch 68?</summary><published>2020-08-11T08:20:31+00:00</published>
    <updated>2020-08-11T08:20:31+00:00</updated>
    
    <content type="html">
      &lt;p&gt;&lt;strong&gt;Sketch 68 is out now.&lt;/strong&gt; With this latest Mac app release, we’re introducing Assistants — a helping hand for your designs. Assistants can help you spot issues with your documents, stay consistent with design systems and prepare your files for collaboration.&lt;/p&gt;

&lt;p&gt;This release also adds the option to create, rename and delete Cloud projects from the sidebar in the Documents window. And, as ever, we’ve included a round of bug fixes based on your feedback.&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/08/11/introducing-assistants/&quot;&gt;Read more about Assistants&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/assistants/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-68&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/08/11/introducing-assistants/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/08/11/introducing-assistants/"/>
    <title>Introducing Assistants — a helping hand for your designs</title>
    <summary>Assistants make collaboration easier and the design process more efficient.</summary><published>2020-08-11T08:00:00+00:00</published>
    <updated>2020-08-11T08:00:00+00:00</updated>
    
    <content type="html">
      &lt;p&gt;When you work as part of a design team, it’s a challenge to keep everyone’s work consistent. Making sure people are using components from your design system, organizing documents properly, and completing important steps like meeting accessibility guidelines can be tough.&lt;/p&gt;

&lt;p&gt;Regular design reviews can help everyone stay on track, but it’s easy to get sidetracked by conversations about naming conventions and whether you’re using the right shade of blue. That can take focus away from the bigger picture. And that’s where Assistants can help.&lt;/p&gt;

&lt;p&gt;Assistants can automatically check your designs against rules for things like branding, accessibility, document organization and design systems usage. So you can quickly fix smaller issues and spend more time exploring new design solutions or ideas that will have a bigger impact.&lt;/p&gt;

&lt;p&gt;Before we explain how they work, let’s talk a little bit about our process for creating Assistants — and how they’ll help you focus on doing even better work.&lt;/p&gt;

&lt;h2 id=&quot;creating-your-new-digital-team-member&quot;&gt;Creating your new digital team member&lt;/h2&gt;

&lt;p&gt;We know from experience that design reviews can be incredibly useful — but they can also easily get bogged down in details. Life is too short to spend it searching for a group named &lt;code&gt;Submit Button (Copy)&lt;/code&gt; to turn it into a Symbol.&lt;/p&gt;

&lt;p&gt;We knew there was a better way. So, we drew inspiration from a development tool known as code linting. In its simplest form, code linting is like a spelling and grammar check — but for code. You write some code and the linter checks it for obvious errors and issues with styling.&lt;/p&gt;

&lt;p&gt;We like to think of Assistants as the design equivalent of code linting. They automatically look for specific issues in your document and flag them, so you can easily find and fix them.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We all make mistakes and miss small details here and there — it sure is great to catch them before handoff!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Anthony Collurafici, Sketch plugin maker and principle product designer at&lt;/em&gt; &lt;a href=&quot;http://alarm.com/&quot;&gt;&lt;em&gt;Alarm.com&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;theres-an-assistant-for-that&quot;&gt;There’s an Assistant for that&lt;/h2&gt;

&lt;p&gt;Different Assistants serve different purposes, and you can add as many as you want to your documents. You might have one for a brand style guide, one to check accessibility, and another for general file organization, for example.&lt;/p&gt;

&lt;p&gt;It’s easy to find and install the ones you need — you can add them with one-click from our &lt;a href=&quot;https://www.sketch.com/extensions/assistants/&quot;&gt;Assistants directory&lt;/a&gt;. When you share your document with others, they’ll be prompted to install the Assistants it uses. And the Assistants directory isn’t the only way to add them — you can also add an Assistant from a URL or from a file on your Mac. These options are especially handy for teams who want to share Assistants privately.&lt;/p&gt;

&lt;p&gt;Once you’ve added the Assistants you want to use, they’ll check your document and show you any issues they’ve found. It’s easy to ignore rules when you’re just experimenting or working on rough ideas, too. To show you more about how they work, we’ve put together this short video:&lt;/p&gt;

&lt;figure class=&quot;embed&quot;&gt;
  &lt;div class=&quot;aspect-ratio&quot; data-controller=&quot;aspect-ratio&quot;&gt;
  &lt;iframe class=&quot;aspect-ratio__fill&quot; data-target=&quot;aspect-ratio.intrinsic&quot; width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/sYRAbi_X5Cs?modestbranding=1&amp;amp;rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; encrypted-media; picture-in-picture&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

  
&lt;/figure&gt;

&lt;h2 id=&quot;built-by-us-made-by-you&quot;&gt;Built by us, made by you&lt;/h2&gt;

&lt;p&gt;There are plenty of Assistants you can use to get started, but with some JavaScript knowledge (or a frontend developer friend to team up with) you can also build something custom to suit your team’s needs. Whether you’re a small studio or a growing organization, the possibilities are endless.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The Assistants development environment is a delight! I managed to setup our template Assistant in five minutes — including getting coffee.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Fredrik Ward,&lt;/em&gt; &lt;a href=&quot;https://sketch2react.io/&quot;&gt;&lt;em&gt;Sketch2React&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve created an Assistant of your own, it’s simple to share it internally with your team — or add it to our public page if you think others in the community might find it useful. Take a look at our &lt;a href=&quot;https://developer.sketch.com/assistants/&quot;&gt;developer documentation&lt;/a&gt; for a full guide to creating your own Assistants.&lt;/p&gt;

&lt;p&gt;Finally — if you want to check a document with Assistants outside of Sketch, go right ahead. You can run them right from the command line — and even add them to your Continuous Integration (CI) workflows — making them perfectly scalable for larger teams and organizations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The way you designed Assistants is on the edge of both the design and development worlds. And that’s great! To me it feels though as if these worlds are still kept separate, but Assistants has the power to unite them more.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Micha Wiebe,Sketch Wiki&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Our thinking for Assistants started with a desire to make design reviews more effective, but the benefits are much bigger. Ultimately, it’s about making collaboration easier and creating a smoother design process for teams. The reaction to Assistants during our beta and testing phases has been great, and plenty of teams are already working on their own. Now we can’t wait to see how the wider design community will adopt them.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Assistants is available now in version 68 of the Mac app. If you’re ready to get a helping hand with your designs, take a look at our &lt;a href=&quot;https://www.sketch.com/extensions/assistants/&quot;&gt;Assistants page&lt;/a&gt; and add the ones you need with a click.&lt;/p&gt;



            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/extensions/assistants/&quot;&gt;Visit the Assistants directory&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-68&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/assistants/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/07/30/9-things-you-probably-didn-t-know-you-could-do-in-sketch/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/07/30/9-things-you-probably-didn-t-know-you-could-do-in-sketch/"/>
    <title>9 things you (probably) didn’t know you could do in Sketch</title>
    <summary>Our favorite tips and tricks, gathered from our incredible community — and the Sketch team</summary><published>2020-07-30T11:53:28+00:00</published>
    <updated>2020-07-30T11:53:28+00:00</updated>
    
    <content type="html">
      &lt;p&gt;When we post about new Sketch releases, we usually talk about the big new features — things like prototyping or performance upgrades. But sometimes, that means the smaller details can get overlooked.&lt;/p&gt;

&lt;p&gt;Over the years, we’ve added all kinds of neat little tricks to the Mac app to make it easier and more intuitive to use. So now we thought it was time to pull out a few of the best. Whether you’re a newcomer or a seasoned pro, we hope there’s something in here that surprises you.&lt;/p&gt;

&lt;h2 id=&quot;1-drag-to-delete-styles&quot;&gt;1. Drag to delete Styles&lt;/h2&gt;

&lt;p&gt;Let’s start with a quick, simple trick. If you want to remove a Style property (like a blur or a fill), you can simply drag and drop it out of the Inspector panel.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/drag_delete_styles.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/drag_delete_styles.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;It’s not the most revolutionary thing in the world, but it’s a time-saver. Also, that little ‘whoosh’ is &lt;em&gt;far&lt;/em&gt; more satisfying than just unchecking it and clicking the trash icon.&lt;/p&gt;

&lt;h2 id=&quot;2-resize-layers-with-the-arrow-keys&quot;&gt;2. Resize layers with the arrow keys&lt;/h2&gt;

&lt;p&gt;When it comes to design, every pixel counts. And when you’re adjusting fine details in your project, clicking and dragging a layer with your mouse can be really disruptive — and imprecise — when you want to make only tiny changes.&lt;/p&gt;

&lt;p&gt;So why not just resize the layer using a keyboard command?&lt;/p&gt;

&lt;div class=&quot;shortcuts-table&quot;&gt;   

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; &lt;em&gt;arrow keys&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Expand or contract by 1px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧&lt;/kbd&gt; &lt;kbd&gt;⌘&lt;/kbd&gt; &lt;em&gt;arrow keys&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Expand or contract by 10px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
   
&lt;/div&gt;

&lt;p&gt;These commands are life-savers when you’re making final edits to a project and want to make sure every layer is perfectly sized.&lt;/p&gt;

&lt;h2 id=&quot;3-customize-your-preferences&quot;&gt;3. Customize your preferences&lt;/h2&gt;

&lt;p&gt;So now we know that using Cmd and the arrow keys lets you resize layers. And of course, you can hit an arrow key on its own to move a layer 1px, or hold Shift to move it 10px. Simple.&lt;/p&gt;

&lt;p&gt;But did you know that you can also customize these nudge distances by changing your nudging settings? Head to &lt;strong&gt;Sketch › Preferences&lt;/strong&gt;, then choose the &lt;strong&gt;Canvas&lt;/strong&gt; tab. There, you can adjust how far your layer moves when pressing the arrow key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/nudging.png&quot; alt=&quot;A screenshot showing the Canvas tab in Sketch's preferences panel, with the Nudging settings highlighted&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This can be particularly helpful if you’re working with a grid system, as you can set your distances to perfectly match your layout. No more constant nudging — just a single press and your layer is exactly where you need it to be.&lt;/p&gt;

&lt;p&gt;Here’s another handy Preferences tip if you find yourself duplicating a lot of content. In the &lt;strong&gt;Layers&lt;/strong&gt; tab, you can disable the option to offset duplicated layers (so they’ll appear directly over the original). You can also disable the automatic renaming of the layer — so your duplicate will be named the same as the original. This one won’t apply to everyone, but it’s handy to know.&lt;/p&gt;

&lt;h2 id=&quot;4-update-opacity-and-gradients-with-the-keyboard&quot;&gt;4. Update opacity and gradients with the keyboard&lt;/h2&gt;

&lt;p&gt;We know that sometimes, you need more precision than you can get using your mouse. It can take a lot of fine movements to find exactly the setting you want for things like layer opacity. So we made it easier to be precise.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/opacity.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/opacity.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;Rather than clicking and dragging (and undoubtably landing on some random percentage), you can simply select the layer, then type the percentage opacity you want. You don’t need to click anywhere — just type. Single numbers will set a rounded percentage value (e.g. type &lt;code&gt;5&lt;/code&gt; to get 50% opacity), while typing two numbers gives you more precision. Hit &lt;code&gt;0&lt;/code&gt; to return to 100%.&lt;/p&gt;

&lt;p&gt;The number keys are also handy when you want to apply a gradient to an object. You can place gradient points at different intervals with the 0-9 keys to give you a more precise gradient layout. And if you want to add a gradient point exactly between two other points, you can just hit &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;5-rasterize-layers-faster&quot;&gt;5. Rasterize layers faster&lt;/h2&gt;

&lt;p&gt;If you’re bringing assets from Sketch into another application, this could be a game-changer.&lt;/p&gt;

&lt;p&gt;Exporting complex groups of layers into different apps at the right size and with the right name can be time-consuming. One option is to export the asset, then re-import it as one flat image. But there’s a much faster way to do this. We’ll leave it to our friend Joseph to explain:&lt;/p&gt;

&lt;figure class=&quot;embed&quot;&gt;
  &lt;div class=&quot;aspect-ratio&quot; data-controller=&quot;aspect-ratio&quot;&gt;
  &lt;iframe class=&quot;aspect-ratio__fill&quot; data-target=&quot;aspect-ratio.intrinsic&quot; width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/HsQS_jly0a8?modestbranding=1&amp;amp;rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; encrypted-media; picture-in-picture&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

  
&lt;/figure&gt;

&lt;p&gt;By making your asset exportable and giving it the right filename suffix, you can drag the layer onto the Canvas (while holding the Option key) to place a bitmap image version into your design. In doing that, you’ll get a flat bitmap, at the right resolution, with the right name, in seconds.&lt;/p&gt;

&lt;h2 id=&quot;6-right-click--replace-with&quot;&gt;6. Right click › Replace With&lt;/h2&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/replace_with.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/replace_with.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;This one can be a huge time-saver when making changes to layers in your design. If there’s a Symbol in your project that you’d like to swap out, simply right-click on it and hover over &lt;strong&gt;Replace With&lt;/strong&gt;. The menu will show you all the Symbols in your document and you can choose the one you want with a click.&lt;/p&gt;

&lt;h2 id=&quot;7-customize-your-toolbar&quot;&gt;7. Customize your toolbar&lt;/h2&gt;

&lt;p&gt;We set up the Sketch toolbar to put the most commonly used tools within easy reach. For beginners, especially, this makes it even easier to get to know the app.&lt;/p&gt;

&lt;p&gt;But we know that once you’re more comfortable in Sketch, you may find you’re using some tools much more than others — and you’d prefer easy to access to them from the toolbar. The good news is, that’s totally possible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/customize_toolbar.png&quot; alt=&quot;A screenshot showing the Customize toolbar menu in Sketch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Right-click on the toolbar and select &lt;strong&gt;Customize Toolbar…&lt;/strong&gt; The menu will let you drag and drop tools in and out of the toolbar, so you can create your perfect Sketch setup, with only the tools you need.&lt;/p&gt;

&lt;h2 id=&quot;8-use-math-in-the-inspector&quot;&gt;8. Use math in the Inspector&lt;/h2&gt;

&lt;p&gt;Our Inspector is smarter than you might think. You probably know you can adjust the size of a layer by typing its dimensions into the Inspector. But did you know you can also use math to resize those layers based on the dimensions that you’ve already set?&lt;/p&gt;

&lt;p&gt;That means that if you need to double the size of a layer, you can simply add &lt;code&gt;*2&lt;/code&gt; to the end of the current dimensions — and the Inspector is smart enough multiply the size by two. You can also use letters after these values to tell Sketch which edge of the shape to expand from when setting dimensions. For example, if you wanted to expand downwards from the top, you could type &lt;code&gt;*2t&lt;/code&gt;. To expand left from the right-hand edge, you could write &lt;code&gt;*2r&lt;/code&gt; .&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/use_math.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/use_math.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;The same trick applies for adding (e.g. &lt;code&gt;50+10&lt;/code&gt;), subtracting (e.g. &lt;code&gt;50-5&lt;/code&gt;), and dividing (e.g. &lt;code&gt;50/2&lt;/code&gt;). You can use it to calculate circles, too — trying using &lt;code&gt;pi&lt;/code&gt; in your calculations, for example. You can even type a percentage in the size fields to reize the layer relative to the Artboard it is on (e.g. &lt;code&gt;100%&lt;/code&gt; makes the layer width the same as the Artboard) or relative to the largest item of the group it is in.&lt;/p&gt;

&lt;p&gt;Say goodbye to doing mental calculations and let Sketch do the hard work for you. Who became a designer to do math, anyway?&lt;/p&gt;

&lt;h2 id=&quot;9-read-the-documentation&quot;&gt;9. Read the documentation&lt;/h2&gt;

&lt;p&gt;We promise the people who wrote the documentation didn’t make us put this here. But our docs do contain a goldmine of cool tricks and shortcuts for Sketch — so you’ll definitely want to &lt;a href=&quot;https://www.sketch.com/docs/&quot;&gt;give them a read&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How else would you know that you can &lt;a href=&quot;https://www.sketch.com/docs/images/#replacing-images&quot;&gt;swap an image for another one&lt;/a&gt; after you’ve already styled the layer? Or &lt;a href=&quot;https://www.sketch.com/docs/images/#reducing-image-size&quot;&gt;reduce an image’s size inside Sketch&lt;/a&gt;, without having to leave the app? Or &lt;a href=&quot;https://www.sketch.com/docs/layer-basics/#selecting-multiple-layers&quot;&gt;select multiple layers&lt;/a&gt; simply by holding down the Shift key? You get the point.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Did we miss a handy trick that you use every day? Let us know on Twitter. And for more timesaving tips, take a look at our guide to the essential&lt;/em&gt; &lt;a href=&quot;https://www.sketch.com/blog/2020/06/19/the-best-keyboard-shortcuts-to-get-started-with-sketch/&quot;&gt;&lt;em&gt;Sketch keyboard shortcuts&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, too.&lt;/em&gt;&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us your own tips and tricks&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs&quot;&gt;Read our documentation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/07/22/diverse-design-resources/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/07/22/diverse-design-resources/"/>
    <title>Diverse illustrations and avatars for your Sketch projects</title>
    <summary>Create more inclusive designs with these Sketch illustrations, icons and avatars featuring diverse characters</summary><published>2020-07-22T09:00:27+00:00</published>
    <updated>2020-07-22T09:00:27+00:00</updated>
    
    <content type="html">
      &lt;p&gt;Putting people are the heart of your projects can help users connect with your designs. But a lot of the time, the visuals we encounter both online and in the physical world simply don’t reflect the reality of the world around us. Often, that means you’ll see icons, illustrations, and avatars primarily featuring able-bodied white people.&lt;/p&gt;

&lt;p&gt;Representation matters. And here at Sketch, we want to help you create inclusive designs that are accessible to everyone. So we’ve gathered together some awesome resources you can use to make sure your projects are as diverse as the world around us.&lt;/p&gt;

&lt;h2 id=&quot;black-illustrations&quot;&gt;Black Illustrations&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/black-illustrations-hi.png&quot; alt=&quot;An illustrated image of two Black men video chatting in an office environment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Created by designer John D. Saunders, &lt;a href=&quot;https://www.blackillustrations.com/&quot;&gt;Black Illustrations&lt;/a&gt; is a series of digital designs featuring people of color. You can download collections that feature illustrations of Black people in a range of scenarios, from health and fitness to education. Plus, packs such as the Office Hustle collection are completely free, and you can use them wherever you like — in both personal and commercial projects.&lt;/p&gt;

&lt;h2 id=&quot;diversity-avatars&quot;&gt;Diversity Avatars&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/diversity-avatars.png&quot; alt=&quot;An image of five different illustrated avatars showing a range of ethnicities, ages and genders&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes great design is made even more powerful by the story behind it. That’s certainly the case for &lt;a href=&quot;https://diversityavatars.com/&quot;&gt;Diversity Avatars&lt;/a&gt;. Created by two friends — Ramy and Scott — the project was borne out of a desire to provide tools for designers to depict equality and diversity. The goal was to create 1,000 avatars. Now at 900, the final 100 avatars will be dedicated to Black Lives Matter, commemorating those who have lost their lives due to racial injustice.&lt;/p&gt;

&lt;h2 id=&quot;humaaans&quot;&gt;Humaaans&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/humaaans-1.png&quot; alt=&quot;Three screenshots showing human avatars, including differently-abled people and people of color&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This mix-and-match library from Pablo Stanley lets you rotate different elements to create unique ‘&lt;a href=&quot;http://www.humaaans.com/&quot;&gt;humaaans&lt;/a&gt;’! You control everything from their clothing, hairstyles, skin color and poses to create your own characters. The library also includes customizable backgrounds to help you set the scene.&lt;/p&gt;

&lt;h2 id=&quot;open-peeps&quot;&gt;Open Peeps&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/open-peeps.png&quot; alt=&quot;An image showing a large collection of monochrome avatars, each with a different hairstyle, facial expression and hair style&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another great design resource from Pablo Stanley, &lt;a href=&quot;https://www.openpeeps.com/&quot;&gt;Open Peeps&lt;/a&gt; lets you personalize your characters in a similar way to Humaaans. You can switch up clothing, hairstyles, poses (including standing and sitting), and even emotions to create a unique group of Peeps in different scenes.&lt;/p&gt;

&lt;h2 id=&quot;black-lives-matter&quot;&gt;Black Lives Matter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/black-lives-matter.png&quot; alt=&quot;An image showing the words Black Lives Matter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This graphics collection features Black Lives Matter resources to help you spread the message. You can &lt;a href=&quot;https://www.sketchappsources.com/free-source/4449-black-lives-matter-vector-logo-symbol-graphics-sketch-freebie-resource.html&quot;&gt;download the collection&lt;/a&gt; from Sketch App Sources to use in your Sketch designs.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We want this list to keep growing. So if there are any other design resources you use to make sure your designs are diverse, let us know!&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us about more awesome diverse design resources&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/07/14/speeding-up-sketch-67/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/07/14/speeding-up-sketch-67/"/>
    <title>Speeding up Symbols: how we improved performance in Sketch 67</title>
    <summary>A behind-the-scenes look at how we built Symbols in Sketch — and how we made working with them faster</summary><published>2020-07-14T10:24:08+00:00</published>
    <updated>2020-07-14T10:24:08+00:00</updated>
    
<author>
      <name>Pieter Omvlee</name>
    </author>
    <content type="html">
      &lt;p&gt;&lt;em&gt;When we announced version 67 of the Mac app, we put a lot of focus on the performance improvements it brought. Our team worked hard behind the scenes to streamline things and make the whole app feel a lot smoother and more responsive. Take a look at&lt;/em&gt; &lt;a href=&quot;https://www.sketch.com/blog/2020/07/01/whats-new-in-sketch-67/&quot;&gt;&lt;em&gt;our announcement post&lt;/em&gt;&lt;/a&gt; &lt;em&gt;to find out more.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now, we want to give you a look at our approach to speeding up Symbols. This is the first in a new series of posts where we’ll dive a little deeper into the technical side of the app. Stay tuned for more in future.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We spent a lot of time working on Sketch 67’s performance — to make the Mac app faster. We’ve improved a number of things, from how we render background blurs with saturation, to how we time our display updates to stay closer to the screen’s refresh rate.&lt;/p&gt;

&lt;p&gt;We’ve tried to make working with Symbols feel smoother in general, too, and a few people have asked how we went about this. While the answer isn’t some crazy story involving advanced computer science or math, there also wasn’t just one thing that made all the difference. But we do think there are a few interesting things we can share that might also ring true for other developers.&lt;/p&gt;

&lt;h2 id=&quot;what-makes-a-symbol&quot;&gt;What makes a Symbol?&lt;/h2&gt;

&lt;p&gt;When we introduced Symbols, we started with a basic foundation. Symbols consist of two parts; a Symbol master, which is like an Artboard, and contains multiple layers (such as text layers, groups and shapes), and a Symbol instance, which is a regular layer that just contains a reference to the master. Whenever we need to draw an instance to the canvas, we find the Symbol master and draw that in its place.&lt;/p&gt;

&lt;p&gt;A Symbol instance can also contain overrides, which is a set of derivations from the values in the master. Text overrides are the most common. Before Sketch 67, if an instance had overrides we would make a full copy of the master, update the text layers with the overrides values, and then draw that copy.&lt;/p&gt;

&lt;h2 id=&quot;finding-focus&quot;&gt;Finding focus&lt;/h2&gt;

&lt;p&gt;When we first released Symbols, they only supported text overrides. Since then, we’ve added more types of overrides — nested Symbol overrides, style overrides, resize rules, Smart Layout and more. Having a growing team working on these presented challenges, and while we always try to document our code and share knowledge, we’re not a hive mind. We had a nagging feeling we could be doing better.&lt;/p&gt;

&lt;p&gt;As features evolve, the basic assumptions that they were built on may no longer hold true, and the architecture you put in place on day one may no longer suffice. But rather than rewrite it at the first sign of trouble, it usually makes more sense to stretch the system a little further. After all, we can’t rewrite every line of code every time we create a new feature.&lt;/p&gt;

&lt;p&gt;Eventually, though, you hit a breaking point, and we reached one while developing Smart Layout. We used to render Symbol instances as copies of Symbol masters, but that had to change so we could deal with layout adjustments affecting nested symbols. Now we render Symbols as detached groups — a Symbol instance is turned into a group that contains a copy of all those layers, recursively down into all the nested symbols.&lt;/p&gt;

&lt;p&gt;After we shipped Smart Layout we felt we needed to take a step back and assess our whole approach. Unsurprisingly, we found assumptions that no longer held true — and inevitably, where multiple developers had been working on different assumptions, there was now conflict. We discovered, for example, that we had two caches for storing calculated Symbols, and we were spending a lot of time filling up one of those caches in advance — without ever actually using them where it mattered most.&lt;/p&gt;

&lt;h2 id=&quot;pulling-symbols-into-shape&quot;&gt;Pulling Symbols into shape&lt;/h2&gt;

&lt;p&gt;We also decided to take a good look at how we were calculating the final Symbol instances that we render after applying overrides, scaling, Smart Layout etc. As I mentioned, these used detached groups, and we found that we were creating too many intermediary copies of (deep) object trees. We managed to cut this right back.&lt;/p&gt;

&lt;p&gt;I described earlier how we make copies of the master to apply overrides. While this is fine for most Symbols, it becomes exponentially worse with more complex and deeply nested Symbols. What made this worse was the double tree structure we use in our model — a mutable tree that lets the UI layer easily make changes, backed by a lockless immutable model that we can safely pass between threads for doing things such as rendering the canvas across multiple threads.&lt;/p&gt;

&lt;p&gt;In short, we were creating many intermediate copies and throwing them away again. There was no magic answer to this — it was just a case of finding ways in which we were going from one tree model to another and trying to eliminate them. On any decent-sized Symbol we managed to eliminate at least half a dozen intermediary copies using this method.&lt;/p&gt;

&lt;p&gt;This had all kinds of other knock-on effects, too. For example, it meant we could better utilize a cache that was based on identity. Making an intermediary copy caused a cache miss, which could cause relatively expensive things like shadows to be calculated all over again.&lt;/p&gt;

&lt;h2 id=&quot;less-work-more-speed&quot;&gt;Less work, more speed&lt;/h2&gt;

&lt;p&gt;Another big win was discovering that we were drawing too much when a Symbol master changed. Drawing fast in a typical macOS app is achieved by drawing as little as possible. This has two benefits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;By telling the system the smallest area of the screen that has changed, we can push fewer pixels back to the screen&lt;/li&gt;
  &lt;li&gt;We don’t need to redraw pixels that haven’t changed, so you can skip over logic that traverses layers, draws paths, shadows etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We found that editing a Symbol master actually caused the entire canvas to redraw, which had something to do with how we track changes in our document — by calculating diffs on a series of immutable trees. We’ll talk about the bigger benefits of this in a future post, but suffice to say that this was a worthwhile fix to make.&lt;/p&gt;

&lt;h2 id=&quot;a-blueprint-for-the-future&quot;&gt;A blueprint for the future&lt;/h2&gt;

&lt;p&gt;If there’s a lesson to take from this, maybe it’s that it’s important to stop once in a while and investigate what you already have. It’s easy for little inefficiencies to creep in, and because they happen between other constant changes to the codebase they can be easy to miss. Making Sketch as responsive and reliable as possible is a priority for us, and it’s something we’ll continue to make efforts towards going forward.&lt;/p&gt;

&lt;p&gt;For now, though, if you haven’t tried Sketch 67 yet and your documents have a lot of Symbols, I hope you’ll give it a try and see the difference it makes.&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/07/01/whats-new-in-sketch-67/&quot;&gt;Find out more about Sketch 67&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Let us know what you think&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/07/01/whats-new-in-sketch-67/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/07/01/whats-new-in-sketch-67/"/>
    <title>Big performance boosts and new font embedding options — what's new in Sketch?</title>
    <summary>Big performance boosts and new font embedding options — what's new in Sketch?</summary><published>2020-07-01T12:00:56+00:00</published>
    <updated>2020-07-01T12:00:56+00:00</updated>
    
    <content type="html">
      &lt;p&gt;We’ve always aimed to make Sketch flexible and powerful. And over the years, as we’ve added more functionality, documents have gotten bigger and more complex — which can make a difference to performance. We know this can have a huge impact on your workflow. So we’ve been listening carefully to your feedback on this, and we’ve spent the last few months working hard on measuring and improving performance across the app. In this release, that’s paying off in a big way.&lt;/p&gt;

&lt;p&gt;It all starts with Symbols. They’re at the heart of every design system, so we’ve made working with Symbols feel smoother and more responsive than ever — especially in complex documents with lots of instances. You’ll notice that deeply nested Symbols and Smart Layout are faster, too. You can find out more about how we did this in our &lt;a href=&quot;https://www.sketch.com/blog/2020/07/14/speeding-up-sketch-67/&quot;&gt;Speeding up Symbols&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;We’ve also fixed some particular performance bottlenecks around shadows, as well as Layers with background blur and saturation. The team really focused on pushing performance here, and their hard work has paid off. Take a look at this comparison to see exactly what we mean.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/sketch_67_performance.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/sketch_67_performance.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;You’ll also see improvements in documents with lots of Slices, particularly when you’re zoomed in on content. These are just a few of the performance upgrades we’ve made in this release, but there’s plenty more going on behind the scenes — and they all add up to a serious speed boost in your daily workflow.&lt;/p&gt;

&lt;p&gt;In future releases, we’ll continue to focus on improving performance across the board — from low-level rendering, to specific bottlenecks, like we did in this release. Stay tuned for more updates on this.&lt;/p&gt;

&lt;h2 id=&quot;embedding-fonts-in-documents&quot;&gt;Embedding fonts in documents&lt;/h2&gt;

&lt;p&gt;With this release, we’re introducing the option to embed fonts in individual documents. This should make it easier to share documents with others, both on the Mac and on Cloud.&lt;/p&gt;

&lt;p&gt;In the Mac app, it means whoever you share your document with will be able to open and edit it as if they have the fonts installed — even if they don’t. And if you’re sharing files on Cloud, text layers will all render exactly as you see them in the Mac app.&lt;/p&gt;

&lt;p&gt;You can do this in any document by choosing &lt;strong&gt;Text › Document Fonts…&lt;/strong&gt; and selecting the fonts you want to embed. It’s important to note that you’ll only be able to embed non-system fonts.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/embed_fonts.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/embed_fonts.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;p&gt;We respect and value the work of font creators in the design community. So, before you embed any font, you must make sure you own the correct license, including the rights to distribute it. We’ll ask you to confirm this before you embed. Please be aware that some font vendors do not allow users to transfer, display or distribute their fonts — and our terms of service prohibit embedding fonts without the correct license.&lt;/p&gt;

&lt;p&gt;If you find that someone has embedded your font into a document on Cloud without the proper rights, please &lt;a href=&quot;/support/contact/&quot;&gt;contact us&lt;/a&gt; and we’ll remove it from our systems.&lt;/p&gt;

&lt;h2 id=&quot;documents-window-improvements&quot;&gt;Documents window improvements&lt;/h2&gt;

&lt;p&gt;With this release, we’re also making it easier for you to manage your Cloud docs on the Mac app. From simple things, like renaming and deleting Cloud documents from the Documents window, to the ability to drag-and-drop local Sketch documents onto the Documents window to upload them to Cloud. If you’re moving older documents to Cloud, drag-and-drop supports multiple documents at the same time, making the move a breeze.&lt;/p&gt;

&lt;p&gt;You’ll be able to rename and confirm the document is in the right team or project before you upload. And if you drag a document into a Libraries tab, it will become a Cloud Library automatically. Alternatively, you can turn any Cloud document into a Cloud Library from the &lt;strong&gt;File&lt;/strong&gt; menu of the Mac app.&lt;/p&gt;

&lt;figure&gt;&lt;video autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; playsinline=&quot;&quot; width=&quot;100%&quot; poster=&quot;https://cdn.sketchapp.com/assets/blog/rename_and_delete.jpg&quot; height=&quot;auto&quot;&gt;&lt;source src=&quot;https://cdn.sketchapp.com/assets/blog/rename_and_delete.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/figure&gt;

&lt;h2 id=&quot;more-updates-improvements-and-fixes&quot;&gt;More updates, improvements and fixes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Better emoji&lt;/strong&gt; — Using emoji in your text layers no longer stretches the line height and vertical rhythm of your layers. 🙌 So you can sprinkle emoji wherever you want, and everything will still align perfectly. 🎉&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Smarter Select All&lt;/strong&gt; — Select All is now more context-aware. By default, it now selects all layers in your current group. Using Select All again will extend that selection to layers in the next group up. Using Select All with an Artboard selected will select all Artboards instead, and when you’ve select layers from two or more Artboards, Select All will select the contents of all Artboards.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Simpler exports&lt;/strong&gt; — For our developer friends, we’ve added a new &lt;code&gt;--suffixing&lt;/code&gt; option for the Sketchtool &lt;code&gt;export layers&lt;/code&gt; command. Using this option makes it possible to export non-uniquely named layers without one overwriting the other.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A color picker tweak&lt;/strong&gt; — We’ve tweaked the size and spacing of the fill mode buttons in the color picker. That might not seem release note-worthy, but we did it to make room for an exciting update coming soon. That’s all we’re saying for now.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Crash and bug fixes&lt;/strong&gt; — As always, we’ve squashed some pesky bugs and fixed some unexpected crashes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Version 67 of the Mac app is available as an update right now — you can read a full set of release notes at &lt;a href=&quot;/updates/#version-67&quot;&gt;sketch.com/updates&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We hope you’ll enjoy these latest updates to Sketch. We’re always listening to your feedback, so if you have any questions or run into any issues, please get in touch and let us know.&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;sketch://update&quot;&gt;Open the Mac app and update&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/blog/2020/07/14/speeding-up-sketch-67/&quot;&gt;Find out how we gave Symbols a speed boost&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/updates/#version-67&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sketch.com/docs/text/#embedding-fonts&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
  <entry>
    <id>https://www.sketch.com/blog/2020/06/23/4-things-that-got-us-excited-at-wwdc-2020/</id>
    <link rel="alternate" href="https://www.sketch.com/blog/2020/06/23/4-things-that-got-us-excited-at-wwdc-2020/"/>
    <title>4 things that got us excited at WWDC 2020</title>
    <summary>New Apple silicon, redesigned UIs and more — here's what we picked out from the WWDC 2020 keynote</summary><published>2020-06-23T15:03:21+00:00</published>
    <updated>2020-06-23T15:03:21+00:00</updated>
    
    <content type="html">
      &lt;p&gt;It’s that time of year again. WWDC kicked off yesterday with the customary keynote and software announcements. And while this year we were obviously unable to attend in person (or be at the &lt;a href=&quot;https://layers.is/&quot;&gt;Layers&lt;/a&gt; conference across the street from the San Jose Convention Center), there was still plenty of exciting things to talk about.&lt;/p&gt;

&lt;p&gt;The big news was the confirmation that Macs will soon be moving to Apple’s own custom silicon, plus a major redesign for macOS. But there were plenty of other things to be excited about in the keynote. Here are our four top picks — including some input from our founder, Pieter Omvlee, on what they mean for Sketch.&lt;/p&gt;

&lt;h2 id=&quot;1-the-move-to-apple-silicon&quot;&gt;1. The move to Apple silicon&lt;/h2&gt;

&lt;p&gt;We were expecting it, but it was great to finally get a little more detail about &lt;a href=&quot;https://www.apple.com/newsroom/2020/06/apple-announces-mac-transition-to-apple-silicon/&quot;&gt;Apple’s new chips&lt;/a&gt; coming to Macs later this year. “I’m super excited for the ARM transition!” says Pieter. “I’m curious to see Sketch run on proper Apple silicon hardware, and even more curious to see what it allows Apple to do with upcoming hardware releases.” And while the internal changes are obviously large, it seems that Apple has been working hard to make sure everything runs smoothly.&lt;/p&gt;

&lt;p&gt;“I’m impressed by how well the entire transition seems to have been prepared and I can’t wait to get my hands on a dev kit,” says Pieter. “I don’t expect it’ll be hard to get Sketch to run natively on the new silicon. We always try to stick quite close to Apple’s recommended ways of doing things and their frameworks.”&lt;/p&gt;

&lt;p&gt;We’re already eager to get our hands on Apple’s hardware kits, and over the next few months we’ll be working hard to get Sketch running at its best on the new processors. Stay tuned for more updates soon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/macos_big_sur.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-a-new-look-for-macos-big-sur&quot;&gt;2. A new look for macOS Big Sur&lt;/h2&gt;

&lt;p&gt;We were ready for new processors. But the announcement of a complete UI redesign in &lt;a href=&quot;https://www.apple.com/macos/big-sur-preview/&quot;&gt;macOS 11 Big Sur&lt;/a&gt; was barely rumored. The sleek new look is a huge overhaul for the Mac, and our design team are already having big conversations about what it means for Sketch.&lt;/p&gt;

&lt;p&gt;“I’m really digging the new look in macOS 11,” says Pieter. “And as a side note, I’m happy to see that version number finally bumped to 11. We plan to be there on day one with an updated UI and we’ll start working immediately to get Sketch running smoothly on the new OS. And I’m eager to learn this week about the less-visible improvements to Apple’s frameworks, such as SwiftUI”&lt;/p&gt;

&lt;p&gt;From details like icons and colors, to more noticeable changes like toolbars and alerts and sheets, our team are already hard at work discussing how we should reflect Apple’s new design language in Sketch. Stay tuned — we’ll have some more details to share on this soon.&lt;/p&gt;

&lt;h2 id=&quot;3-improvements-to-messages&quot;&gt;3. Improvements to Messages&lt;/h2&gt;

&lt;p&gt;While we carry on work developing Sketch’s collaboration features, we were paying particular attention to &lt;a href=&quot;https://www.apple.com/ios/ios-14-preview/&quot;&gt;Apple’s new Messages updates&lt;/a&gt;. The way that they handle threaded conversations and in-line replies was inventive, and the team’s approach to mentions is an interesting one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/ios14_threaded_messages.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We’ve been waiting for improvements like these in Messages for a little while now (especially on Mac), so it’s great they’ve made it into iOS 14. We’ll be taking a closer look at how it works in the developer betas, and exploring how similar techniques might benefit teams who want to collaborate in Sketch.&lt;/p&gt;

&lt;h2 id=&quot;4-privacy-is-still-king&quot;&gt;4. Privacy is still king&lt;/h2&gt;

&lt;p&gt;Last year’s introduction of Sign in with Apple and HomeKit improvements were the latest in a long line of privacy commitments made during Tim Cook’s tenure at Apple. And this year the team improved things again with privacy summaries for every app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sketchapp.com/uploads/apple_privacy.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Apps will soon need your permission before they can turn on any tracking features, you’ll be able to grant apps only approximate location data rather than precise data, and apps will also need to self-report all the privacy data they collect before you download.&lt;/p&gt;

&lt;p&gt;We’re big fans of &lt;a href=&quot;https://www.apple.com/privacy/&quot;&gt;Apple’s approach to privacy&lt;/a&gt;, and it’s great to see a company with so much influence trying to improve the practices of others in their industry.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There were plenty of other things that grabbed our attention — including AirPods’ awesome new spacial audio features, on-device translation, and dance workouts (our company meetups just got &lt;em&gt;interesting&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Our teams will be working away behind the scenes for the next few months to make sure Sketch is running perfectly in time for macOS Big Sur’s launch this fall — and for Apple’s new ARM-based Macs later this year and beyond. For now, we’ve got some WWDC workshops to get back to. Enjoy WWDC week! 😎&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; Apple are in the process updating their &lt;a href=&quot;https://developer.apple.com/design/resources/&quot;&gt;resources page&lt;/a&gt; right now to add the new design elements for macOS Big Sur and iOS 14. Head over there to download the latest templates as Sketch files and Libraries. 👍&lt;/p&gt;


            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@sketch&quot;&gt;Tell us your favorite part of the keynote&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/design/resources/&quot;&gt;Download Apple's design resources for Sketch&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
    </content>
  </entry>
  
</feed>
